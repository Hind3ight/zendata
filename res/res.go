package res

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _res_doc_sample_txt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xcf\x4a\x02\x51\x14\x87\xf7\x3d\xc5\x59\xb4\xbd\x13\xb3\x70\xdb\xbb\x48\xde\x89\x60\x4c\x61\x8e\x30\xb5\xba\x0c\x85\x0a\x13\x1a\x59\x0b\x17\x69\xa0\xe8\xc6\x9b\x11\x64\x7a\xef\xd8\xc3\xcc\xfd\xb7\x9b\x57\x88\x69\xa8\xa0\x36\x67\x75\xbe\xef\xf7\x1d\x1e\x5f\x62\xe0\xd1\x98\x42\x44\x11\xc0\x4c\xb7\xe6\x86\xdb\x57\x61\xc5\xc4\x0c\x86\x76\xb6\x2b\x64\xea\xf8\xde\x66\x5c\x6f\xe6\xfa\x7a\xe3\x9e\x57\x6e\xc9\xf4\xcb\xa3\x61\x8b\x9c\x25\x07\xbf\xfc\x29\x3d\x07\xd2\x80\xa8\xde\x6c\x87\xf4\x08\x69\x84\xde\x45\xbd\x19\x02\x39\x01\xbf\x06\x24\x38\xa3\x61\x03\xbe\xae\x0f\xa4\xf5\xfd\xd7\xea\x60\xbb\x83\x1e\xc6\x08\x24\x00\xa4\x71\x19\xd1\x5f\xb8\xa7\xd4\xdc\xaf\xcb\x94\xd1\xc4\xf4\x86\xfa\x36\x53\x62\x96\xb3\x44\x65\x1f\x76\xb4\xd4\x7c\xac\xb6\x7d\xf3\xd0\x55\xe2\xed\xef\x5e\x21\xd3\x8a\xf1\x6b\x3f\x92\x42\xa6\x4a\xcc\x4b\xb9\x99\x4a\x2d\x07\x76\x7c\xe5\xf6\x77\xba\xbb\xd3\xbd\xf5\xbf\x8e\x4a\xab\xde\x57\x39\x4b\x3e\x03\x00\x00\xff\xff\x91\x28\x48\x67\x1e\x01\x00\x00")

func res_doc_sample_txt() ([]byte, error) {
	return bindata_read(
		_res_doc_sample_txt,
		"res/doc/sample.txt",
	)
}

var _res_doc_usage_txt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xcd\x52\x1a\x41\x10\xc7\xef\x3c\xc5\x5c\x72\x1c\xb9\xa4\x72\xc8\xdb\xa0\x0c\x62\x82\xac\x71\xc7\x68\x79\x5a\x90\x0f\xd1\xc5\x35\x11\xfc\x20\xa8\x60\x89\x90\xc3\x7e\xa4\x52\x91\x65\x17\xf0\x61\x98\xee\x19\x4e\xbc\x42\x6a\x43\x3e\xd8\xaa\xf4\x71\xea\xff\xfb\x75\x4f\x57\x67\x59\x6e\x87\x10\x42\xb3\x84\x10\xbc\xef\xc9\xf6\x29\xf8\x0e\x9c\x7c\x15\x2f\x5d\x2c\xb8\x33\xa3\x98\xd0\x19\x27\x51\x42\x27\x84\x28\x67\x2a\x27\x0e\x0c\x7b\x50\x1e\x2a\xd7\x56\x03\x03\xbe\xdd\xa1\xd1\x9f\x19\x45\xd9\x18\xe0\xf1\x10\xdc\x11\x4c\x2e\xa0\x56\x97\x5f\x1c\x98\x34\xe7\x6d\x43\x3d\x15\xb0\x5d\x83\xca\x0d\xde\x1e\xcd\x6f\xce\x23\xe3\x26\xcb\x93\x3f\x85\x9d\x11\xd6\x1d\x70\x5a\x62\x54\xc3\xcb\xaa\x08\x9f\x65\xe3\x1e\x8f\xcf\xb1\xe9\x61\xdd\x89\xd2\x64\xa5\x68\x9a\xd0\x34\xcb\x44\x9c\x59\x05\xa7\xb5\xca\xc5\x83\x1b\x84\x6e\x68\x7b\x79\xfe\x3b\xb8\x2a\x95\xad\x12\xde\x76\xb1\xe9\xc5\x89\xcc\x16\xcb\xa5\xc9\x5f\xb5\x9a\x5e\x40\xb9\x27\x5b\x25\xb0\xaf\xd0\xf9\xb1\x18\x9b\xb2\x31\x98\x1b\x57\x60\x0d\xe1\xb8\x32\x6f\x35\xe2\xb4\x46\xa8\xb6\xc7\x63\x74\x35\xf8\xdf\x60\x19\x92\xd1\x76\xb7\x53\x3c\x1e\xec\x8c\x61\x6c\x2d\xc6\x26\x36\x5c\x34\x0b\x9c\x1d\xf0\x99\x51\x78\xa7\x6b\xf9\x99\x51\x38\xd8\xce\xc1\x67\x53\xff\x90\x53\xae\x0d\x56\x0f\xaa\x1d\xd9\xaf\x2f\x89\xb8\x9a\x13\xca\x53\xeb\x39\x46\x56\xa5\xc2\x0f\x7e\x3d\xe2\xd5\xf3\xf2\x0f\x22\x38\x5b\xb6\xde\xca\xeb\x6c\x97\x2f\xa5\xb2\x55\x52\xdd\x01\x9c\xd7\x13\x94\x7e\x64\xbb\xeb\x9a\xce\x08\x21\xf0\x70\x07\x27\x1d\xb4\x1f\xc1\x2a\x62\xd3\x8b\xe6\xbb\x9e\xca\xc7\x40\xb9\x4f\x32\xac\x28\xef\x48\xb9\xcd\x7f\x87\x92\x48\x08\x3f\x10\x41\x05\x2f\x47\x62\xfa\x02\xed\x81\x08\x43\x2c\x59\xcb\x4b\x10\xbe\x8d\xb5\xbe\xea\x9a\xaf\x74\xf8\x34\x11\xe1\xe3\x62\x6c\x42\x18\x28\xc7\x01\xaf\x02\xe5\x67\x38\xe9\x44\xeb\x3e\x73\xe1\xe1\x08\xac\xeb\x79\xd5\x12\xbe\x1d\x65\xca\x43\x31\xb9\xc0\xcb\x11\x7e\x6f\x82\x55\x94\xe5\xbe\x08\x7b\xc2\x3f\x85\xb6\x07\xb7\x46\xd4\x36\xcb\xf9\x8e\xfe\x36\x99\xdc\xdf\xdf\x5f\x3b\xe4\x4c\xe7\x5b\xf9\xcd\xb5\x3c\xe3\xc9\x75\x4d\x7b\x9f\x3c\xe4\x19\x9a\xd6\x36\x92\xa9\x74\x9a\x72\x8d\xee\xa4\x78\x96\xbe\x7e\xb3\x96\xe5\xdb\xb9\x9f\x01\x00\x00\xff\xff\xb4\xa3\x5b\xc0\xfb\x02\x00\x00")

func res_doc_usage_txt() ([]byte, error) {
	return bindata_read(
		_res_doc_usage_txt,
		"res/doc/usage.txt",
	)
}

var _res_messages_en_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x4b\x6f\xd4\x30\x10\xc7\xef\xfb\x29\x46\x91\x56\xbd\x84\x45\xc0\x2d\x47\xaa\x82\x90\xb8\xd0\xc2\x89\x22\xcb\x75\x26\x59\x4b\xd9\x71\xea\x99\xb0\xbb\xaa\xfa\xdd\xd1\x38\x09\x2f\x6d\x1e\x70\xc9\xc1\xfe\xf9\xff\x9f\x67\x9e\x36\x00\x59\x63\xa9\xee\x6c\x8d\x59\x01\x19\xd2\x8b\x2f\x77\x59\xae\xc7\x07\x64\xb6\x35\x72\x56\xc0\xd7\x0d\x00\xc0\x53\xfa\x02\x64\xbe\x54\xb4\x0a\xd1\xe0\xc9\x1e\xda\x06\xd3\x83\x74\x25\xd1\x12\x37\x56\x7c\xa0\x24\xb7\xab\x77\xb0\xe5\x2c\x5d\x3f\xe7\x97\x64\x24\x88\x6d\x26\x05\x3e\xa7\xdb\xf1\xf9\xa5\xf7\x0f\x58\x7b\x32\x2e\x50\xe5\xeb\x49\x99\xb7\x0a\x81\x04\xe8\xb9\x1c\xe4\xdc\x22\x5c\xe1\xc9\xcb\x95\x1e\x3f\x76\x5e\x76\x73\x51\x22\x09\x46\xf3\xb3\x52\x53\x3e\x37\x8a\x81\xec\x11\x46\x14\xce\xa1\x83\xa3\x25\x51\x9b\x8e\xb1\xb8\xa7\x57\x3b\xb8\xa1\xba\xf1\xbc\x87\x2d\xdf\xd3\xeb\x1d\x5c\xef\x3d\x21\xe3\x42\xa5\x5c\x17\x23\x92\x2c\xe5\x7a\xdd\x63\x43\xaa\xc5\x6c\xf1\xb8\x73\x0e\x99\x8d\x04\x13\xd1\x96\x93\x9a\x03\xa7\x39\x28\x07\x95\x6f\x96\xa2\xad\xac\x6f\x46\x5d\xa3\xfc\xa4\xf8\x3b\xeb\x9b\xbf\x95\x67\x9b\x31\x4a\xb7\x36\x32\xae\xd3\x4e\x68\x6a\x8c\x0b\x24\x5a\x9e\x50\xfd\x87\x57\xb4\xa4\x1b\x31\xe5\xb6\x65\xf0\x0c\x14\x04\x6e\x91\x6f\x13\x0b\x55\x88\x07\x2b\x39\x48\x3c\xff\x0a\xc4\xb2\x12\x1f\x88\xe5\x37\xf7\x4b\xf6\x35\x12\x46\x2b\x68\x22\xba\x10\xcb\x69\xeb\xf7\x03\x08\xdb\x12\x06\x36\x07\x6e\x91\x4a\x3d\x61\x74\xb3\xcd\x62\xfb\x1d\x8d\x20\x4b\x69\xc5\x4e\x2f\x23\xb2\x80\x12\xa0\x7c\xa9\xe9\xac\x9b\x01\x17\x88\xd0\x89\xe1\xc7\xc6\xcb\x74\xb3\xaa\xa1\x59\xa1\x45\x82\xbb\x4f\x1f\xbd\xa6\xc3\x39\x60\x8c\x21\x16\x2b\xbd\xf0\x84\xce\x3c\x76\x18\xcf\x8b\x3e\x8a\x42\x42\x61\xcb\xf0\x0f\x53\x10\x8e\x8b\xda\x7d\x9f\xfb\x84\xdf\x40\x0c\xc7\x95\xe1\x77\x6d\x99\xda\xbd\xc2\xc2\x13\x63\x94\x97\xfd\x0b\xb5\x28\x56\xe5\x90\x7a\x8d\x27\x87\xd3\x7f\xdd\xd1\x41\x51\x48\xe8\x3a\x69\x17\x51\x83\x17\xfb\x30\xb3\x92\xa3\x78\x0f\x43\x82\xd7\xc9\xf7\x09\x9b\xd9\x19\xfd\xb3\x38\x69\x5a\x17\xc4\x7d\x83\xc6\xed\x75\x59\x8d\xf8\xc3\x4c\xdc\xfa\xb7\xe8\x41\x50\x50\x57\x7d\x10\xde\x00\x7c\xdb\x3c\xff\x08\x00\x00\xff\xff\x45\xe8\x74\xbe\x4d\x07\x00\x00")

func res_messages_en_json() ([]byte, error) {
	return bindata_read(
		_res_messages_en_json,
		"res/messages_en.json",
	)
}

var _res_messages_zh_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\x51\x4b\xdb\x5c\x18\xc7\xef\xfb\x29\x0e\x81\xe0\x8d\x08\xef\x7b\xe9\xfd\x2e\x06\xbb\x99\xbb\x9c\x23\x1c\xd3\xa7\x35\x10\x4f\x34\xe7\x74\xeb\x26\x42\x10\xc5\x3a\x5b\x94\xb5\x5a\x57\x75\xd5\x6d\x9d\x32\x68\x53\x41\x5c\xad\xa9\x7e\x98\xe5\x9c\x9e\x5e\xf5\x2b\x8c\x24\x2a\x6e\x98\xb6\xe8\x4d\x20\xc9\x93\xdf\xef\x3c\xe7\xff\x9c\x2c\x26\x10\x52\x4c\x4c\xd2\x19\x9c\x06\x65\x12\x29\x1f\x66\x95\xf1\xe0\xd9\x1c\x50\x8a\xd3\x40\x95\x49\xf4\x3a\x81\x10\x42\x8b\xe1\x15\x21\xc5\x48\x06\x75\x29\xcb\xd6\x20\x8b\xe7\xe6\x4d\x08\x3f\x08\x5f\x31\x1b\x13\x6a\x62\x66\x58\x24\xa8\xf1\xaf\x36\xf8\x8f\x65\xa4\x52\x25\x2c\x58\x1a\x7f\x08\x34\x03\x69\x83\x68\xba\x45\x52\x46\x3a\x96\xc4\x3d\x87\x1f\x6f\xf4\x56\x0b\xdd\x4e\x63\x1c\xc9\xab\x22\x5f\xad\x8d\x41\xd6\x60\x63\x3d\xc7\xe1\x6b\xed\xdf\xce\xf2\x20\x07\x10\x06\xb6\x76\xd7\x66\x9c\x45\xba\xbf\x22\xb4\xdf\x39\x14\xfb\x55\xb1\xbf\xe7\x77\xae\xbb\xa5\x93\x6e\x65\x45\xba\x75\x79\xe2\x4c\x4e\x93\xff\x26\x90\xdc\x38\x15\x3b\x6b\x48\xa5\xd3\xe4\xff\x09\xe4\xb7\xea\xd1\xdd\xa0\x05\xe8\x19\xdb\x06\xc2\x86\xb6\xd9\x29\xf2\xf5\x42\xd4\x66\xdf\xab\xdc\x11\x1f\x42\xd2\x8c\xae\x03\xa5\x1a\xb3\x34\x1b\x70\x72\x40\x53\x97\x7c\x73\x47\xec\xac\xf9\x97\xe7\x2a\x15\xb9\x2d\xfe\xb1\x3a\x64\xbb\x52\xd8\x30\x6f\xb9\x5a\xca\x18\x90\xf0\xdf\x70\xfe\xfd\x54\x9e\xd5\x46\x84\xcf\x63\x9b\xc2\x10\xfa\xf1\x37\xf1\x65\xeb\x09\x74\x1b\x93\x60\x84\xe3\xf8\x2a\xf5\x5b\x05\xb1\xeb\x4e\x01\x9d\x0a\x2b\xc5\xa1\xc7\xbd\xcd\xbe\x97\xe7\xcd\x03\xe9\x6e\x47\x7e\xbf\xd5\x9e\x02\xfa\x9c\x50\x46\xb9\x7b\x21\x4f\x8f\xee\x2f\xe1\xa1\x35\xa4\x81\x80\x8d\x19\x68\x36\xe8\x96\x9d\x8c\xf7\x77\x4b\x55\x91\xdb\x52\x93\x7e\xeb\xa7\x6c\x34\x79\x67\xbb\xef\xe5\xa5\x53\x16\xe5\x73\x35\xd9\x3d\xfe\x34\xa4\x55\x8a\xdf\x82\xc6\x80\xb2\x24\x66\x38\xd6\x11\x05\xee\x5f\x1f\xf0\xfa\x6e\xe4\xeb\x56\x56\xc4\x76\x53\x14\x1a\x3c\xd7\x54\xe9\x88\xfb\xa9\x5b\x84\x80\xce\x34\xba\x60\x1a\x2c\x3e\x31\xb1\x5e\xe4\x9e\xf3\xea\xe5\x0b\x83\xc1\x8d\xa4\x5d\xbc\x8d\xae\xef\xe5\x7b\xa5\xcf\xd2\x75\xfb\x5e\x65\x64\x31\x64\x41\xd7\x16\x32\x60\xbf\x8f\x95\xde\xe8\xaa\x35\xe9\x7e\xbd\x33\x49\xb7\xce\x37\x6b\xa1\xe9\x51\xde\x9b\x01\xb2\xde\x0d\xd1\xca\xa3\x7c\x34\x26\xff\xf4\x38\xb2\x28\x8c\x11\xb2\x3a\x98\xf1\xff\xd1\x30\xbd\x67\x41\xcd\x13\x76\x52\xb7\x21\x18\x4a\x86\x67\x06\x1c\x39\x9e\xdb\xe3\x97\x6d\x79\x74\xf2\xb8\xd0\x0c\x13\x34\x7d\x36\x38\x4b\x1a\x33\xe6\x06\xcc\x49\x78\xa6\xfd\xeb\x86\x28\x5d\x88\xf2\x79\xaf\x7c\xe6\xb7\xda\xf7\xf1\x09\x84\xde\x24\x96\xfe\x04\x00\x00\xff\xff\x40\x03\x67\x5a\x9e\x06\x00\x00")

func res_messages_zh_json() ([]byte, error) {
	return bindata_read(
		_res_messages_zh_json,
		"res/messages_zh.json",
	)
}

var _res_res_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x99\x4b\x6f\x24\xc7\xf1\xc4\xcf\x33\x9f\x62\xfe\x04\xf4\x07\x09\x2c\xa8\x7e\x3f\x04\xec\x45\x82\xaf\x3e\xf8\xea\x32\x88\xae\xee\xaa\x35\x6d\xf1\xe1\x19\x52\x2e\xad\xa1\xef\x6e\xfc\x32\xa3\x97\x2b\x69\x6d\xc0\xb2\x0f\xdc\x25\x67\x7a\xea\x91\x19\x19\x11\x99\xf3\xbc\xac\x7f\x5d\x3e\xa4\xd3\x39\x5d\x8e\xc7\xfb\x87\xe7\xa7\xf3\xcb\xe9\xfa\x78\xb8\x8a\x3f\xbe\xa4\xcb\xd5\xf1\x70\xb5\x3e\x3d\x3c\x9f\xd3\xe5\xf2\xf5\x87\x8f\xf7\xcf\xbc\x90\x1f\x5e\xf8\xef\xfe\x89\x7f\x2f\x2f\xe7\xfb\xc7\x0f\x97\xab\xe3\xcd\xf1\x98\x5f\x1f\xd7\x53\xbc\x7f\xdc\x96\x97\xe5\xee\x9c\x96\xed\x9a\xdf\x4e\x7f\xfc\x13\x6b\xbd\x3b\x3d\x2e\x0f\xe9\xe4\xcf\xdf\x9c\xae\xf7\x57\xd3\xf9\xfc\x74\xbe\x39\xfd\xe3\x78\xf8\xf0\xd1\xfe\x3a\x7d\xf3\xfe\xc4\x56\xb7\xbf\x4f\x7f\xff\x43\x5a\xb6\x74\xbe\xb6\xb3\xf0\xf7\xb7\xaf\x39\xa7\xb3\x2d\x7b\x73\x73\x3c\xdc\x67\xfb\xc0\xff\xbd\x3f\x3d\xde\x7f\xcf\x12\x87\x73\x7a\x79\x3d\x3f\xf2\xe7\xbb\x53\x7e\x78\xb9\xfd\x1d\xab\xe7\xeb\x2b\x16\x3a\x7d\xf5\xb7\x6f\x4e\x5f\xfd\x70\xe5\x27\xb1\xbd\x6e\x8e\x87\x9f\x8e\xc7\xc3\x0f\xcb\xf9\x14\x5f\xf3\xc9\xf7\xf1\x4d\x8e\x87\x3b\x3f\xce\xfb\xd3\xfd\xd3\xed\x77\x4f\xcf\x3f\x5e\xff\x7f\x7c\xcd\xef\x4e\x1f\x3e\xde\x70\xd6\xdb\xef\xbe\x7f\xba\xa4\xeb\x9b\xe3\xff\xee\x18\xfa\x54\x7c\xcd\xb7\xdf\x72\x92\xeb\x9b\x77\x2c\x71\xfc\xe9\x78\xe4\x84\x77\xe7\x74\xb9\xdb\x9e\xd6\xbb\xcb\xf2\xf0\xfc\x7d\xba\x7b\x29\x2f\xa7\xf7\x8a\xee\xf5\x55\x28\x75\x0e\x65\x8a\xa1\x54\x53\x28\x55\xf5\xe5\x9f\x9c\x43\x19\xba\x50\xa6\x14\xca\x9a\x43\xe9\x96\x50\xaa\x26\x94\xbe\x0e\xa5\xe6\xf5\x31\x94\x3c\x86\xd2\x6e\xa1\xac\x7d\x28\xfd\x1c\x4a\xec\x42\x89\x5b\x28\x75\x1b\x4a\x6c\x43\x19\xab\x50\xb6\x18\x4a\x8c\xa1\x74\x53\x28\x5b\x0a\x65\x9a\x43\x19\xaa\x50\xba\x35\x94\xa1\xf6\xf5\xdb\x2a\x94\xd8\x87\x12\xd9\x63\x0d\x65\xea\x43\xa9\x16\x5f\xa7\x5e\x7c\xed\x2a\x86\x52\x8f\xa1\x0c\x73\x28\x4b\x15\x4a\x9a\x42\x59\x87\x50\x66\x5e\xaf\xfd\xac\xe3\x12\x4a\xca\xa1\x6c\xbc\xd7\x86\xb2\xae\xa1\xe4\x2d\x94\x38\xfa\x73\xfd\x18\xca\x34\x69\x8d\xc9\xd7\x69\x87\x50\x86\x31\x94\x91\xfd\x93\x7f\x9e\x7b\xd5\xdc\x23\x85\xd2\x13\x87\x26\x94\xc4\x5d\xea\x50\xe6\x29\x94\xae\x09\xa5\xeb\x7c\xdf\x55\x77\x61\x8f\x34\x84\x32\x0d\x7e\x67\xf6\xe2\x7e\xc4\x66\xed\x74\xaf\x21\x94\x71\x08\x25\x0e\xa1\x34\xd1\xcf\x9c\x96\x50\xb2\x62\x33\x0c\xa1\xf4\xc4\x25\xfb\x5a\x79\xd1\x9d\xda\x50\xe6\xa4\x35\xc9\xc7\x1c\x4a\xee\x42\x59\x63\x28\x4b\xab\x38\xc6\x50\xe6\x35\x94\x86\xd8\x8d\xa1\x44\xee\xc1\xdf\xb3\xe7\x88\xd7\xb6\x26\x94\xa9\xf2\xbb\xdb\x7e\xab\xf2\xd8\x39\x16\x88\xcb\xd4\xf9\x7b\x5d\xaf\x5c\xce\x9e\xf7\x96\xff\x6b\x5f\xb7\xe2\xfc\x5d\x28\xed\xf4\xb6\x7f\xd5\x7a\xfc\x96\x14\x4a\x95\x43\x59\xba\x50\x72\xef\xf1\xdf\x46\xbf\x27\x79\x07\x0b\x53\xeb\xb1\x25\x7f\xec\xcb\x5a\x60\x8e\xcf\x8c\xb5\xef\x49\xac\x89\x7d\x64\x0f\xce\xce\xb9\xd6\x50\x96\xec\xf7\x9e\x3b\x7f\x86\xd8\x72\xfe\x49\xf1\x22\x9f\x7d\xeb\x39\x9b\x07\xc7\x21\xb9\x1a\x7a\xc7\xbd\xc5\xbf\xf3\xf5\x46\xd6\x5b\x3d\x1f\xe3\x16\x4a\x6e\x43\xd9\xaa\x50\xfa\x3e\x94\x44\xce\x37\xc7\x43\x9f\x42\x69\xea\x50\xb6\x36\x94\x89\x7c\x81\xb7\x18\x4a\x9b\x43\x99\x1b\xc7\xc3\x32\x78\x8d\x80\xb9\x0e\xcc\xcf\xa1\xcc\xb3\xbf\xd6\x28\xfe\xec\xcd\x9e\x89\xb8\xf0\xfb\xe8\x98\x27\x26\xac\x4d\xbc\x89\x19\x31\xa6\x2e\xf8\xec\x12\x3d\x1f\xe4\x9e\x1c\xb0\x76\x9b\x3c\xde\x9f\xd7\x2a\x3f\x73\x1d\x4a\x33\x79\xad\x81\x69\x62\x4c\xce\xfc\xb9\xab\x9d\x78\x7f\xcd\x0e\xd7\x5f\xa4\xd9\x9d\x65\x3e\xe7\xe9\xe3\xe1\xf0\x05\x76\x79\x77\x3c\x1c\xae\xce\xe9\xf2\xf5\xf6\xb4\x7e\xed\x2f\xdf\xbe\x94\x97\xab\x77\xc7\xc3\xcd\xaf\x48\xe9\xf5\xb2\x7c\xf8\x2f\x38\x69\xf5\x98\xaf\x5b\x28\x7d\xe3\xfc\xd0\x81\x99\x2a\x94\x75\xf4\x7c\xb5\xab\x38\x69\x0d\x65\xe4\x99\xd5\xf3\x61\xf8\xe2\xb3\x93\xd7\x28\xf5\x4f\x5d\x82\x95\xa9\x71\x2c\x80\x3f\xd6\x19\xa6\x50\xc6\x39\x94\x7e\x09\x65\xae\x1c\xd3\x9b\xea\xb9\xed\xbd\xf6\xad\xbe\x54\x4f\x60\x1b\x6e\xe3\x59\xb8\x67\x4c\xbe\x1f\x67\x24\x2f\x86\x3f\x6a\xad\xf2\x7a\x81\x47\x52\x72\xac\x77\x29\x94\xb8\x3a\x8e\x06\xee\xd3\x7a\x8e\xe1\xb1\x65\x71\x7c\x73\x2e\xe3\x0a\x72\x1d\x9d\xaf\xba\x2c\x4e\x18\x9d\x23\xe1\x06\xea\x99\x58\xb0\x16\xd8\xa7\x9e\xf9\x9b\xf5\x89\x8d\x71\xc7\xe0\xbc\x00\xef\x54\xc9\x79\x03\x5c\xd6\x7d\x28\x0d\x6b\x6e\xa1\x34\xab\xd7\x5e\xdb\x7a\x8d\x73\x5e\x6a\x83\xf3\x36\xa3\xeb\x00\x7b\xf0\x3b\x7b\x34\xc2\x5c\xb3\xf8\x6b\xac\x4b\x6c\x47\xb8\xb0\x72\x2c\xf2\x1e\x5c\xd0\x0f\xc2\xaf\x38\x63\xdb\x42\x59\x6a\xf1\x6b\x56\x4c\xfa\x50\xb6\x39\x94\x7a\x72\xee\xcd\xca\x31\x1c\x40\xec\xe1\xdc\x26\x79\x0e\x59\x6f\x1e\x9d\x2f\xc8\x35\x67\x6d\xe1\x56\x62\xb3\x29\x9e\x9b\xdf\x2f\x56\x7e\x3f\x38\x68\x45\x6f\x36\xaf\x2f\xe3\xa3\xcd\xb9\x77\xe5\xac\xad\xf3\x6e\x33\x88\x6f\x5a\xaf\x77\xb4\x69\xde\xfc\x0c\xdb\xe0\x3a\x81\xce\x81\x13\x70\xd4\x77\xd2\x9e\xe8\xb9\x03\xcf\xdc\x89\xfc\x27\xf1\xde\x94\x5d\x53\x23\x39\x9d\x1d\x0f\xc4\x00\xfc\xc0\xd1\xe8\xc2\xd2\x3b\x06\xe7\xc5\xe3\xde\x8a\xef\xe1\x32\xf2\x65\x9a\xd8\x3b\x37\xa2\x9d\xdc\x05\x6c\x1a\xb7\x46\xcf\x09\x78\x30\x1c\x47\xc7\x72\x46\x6b\xa3\xe7\x95\x5c\xcc\x7c\x9e\xbb\x34\x1e\x03\xe3\x46\x9d\xc9\xd6\x9a\x9d\xcf\x6a\xc5\x80\x33\x81\x1f\xe3\xe5\xde\xcf\x06\x37\x76\x95\xd7\x97\xe1\x22\xba\x06\x11\x67\xb8\x9a\xb3\xe7\xd9\xd7\x25\x97\xe8\x70\x44\x4f\x54\x03\xf5\xae\x95\x95\xe7\x22\xd5\xc2\x5d\xe3\xb9\x68\xc5\xc5\x70\x76\x37\x78\xad\xc1\xd7\x56\xa3\xd4\x59\xe7\xcf\x98\x86\x66\x5f\x07\xfc\xc0\x11\xe0\xc9\xee\x34\xba\x26\xc0\x0b\xc4\x3f\xa1\x7b\xf2\x1f\xf0\x09\xfc\x8c\x16\x91\xeb\x56\x1a\x4c\xbc\x2b\x69\x2a\x39\xa6\x6e\xe1\x73\x70\x3f\x4a\x93\xd0\x80\x3c\xbf\xbd\x8e\x1e\x9a\xf7\x00\x4b\xb5\xea\xb2\x15\x37\x57\xfe\xbb\xe9\xe3\xa6\x1a\xc8\x8e\x11\xd6\x07\xeb\xc4\x8b\xfa\x23\xee\x51\xb9\xaf\x85\x53\x3e\x9b\xa2\x34\x60\xf0\xcf\x5b\x3e\x1a\x5f\x07\xbe\x01\xe3\xc4\x6a\xeb\x5d\xcb\xb2\xde\x6b\x1a\x3f\x1b\xb9\x21\x76\xe4\x9a\x35\x59\xcf\xf8\x74\xf4\x7d\x59\x8f\xdc\xa0\x7f\xf0\x16\x98\x44\x3f\x88\x01\x75\xcb\x59\xd0\x5d\xf6\x02\xa3\xe8\x16\x6b\x70\x4e\xee\x6c\x5a\x5e\x7b\xac\xa8\x09\x34\xaf\x91\x97\x22\x7f\x70\x3c\x71\x69\x54\x2b\xa6\xa7\xd1\xbd\x0e\x6b\xcd\x3a\x17\xb9\xdd\x31\x05\xc7\xb5\xe2\x66\x38\x06\x0e\x43\xdf\x78\x8f\x7a\x1d\xb3\x73\x9e\xe9\xf0\xe4\x67\xa0\x4e\x8d\x03\x6b\xaf\x11\xee\xd6\x8d\xbe\x67\x96\x8f\x45\xdb\xa7\xda\x9f\x87\x1f\x1a\xd5\x94\xd5\x58\x14\x67\x52\xab\x9b\xbc\x69\x72\xfe\xe5\xae\xe4\x09\xdc\x65\xf1\x0c\x5c\x00\x6e\x93\x7c\xc7\x20\x2e\x07\xef\x9c\x99\xfb\x10\x47\x3e\x67\x7b\xf7\x8e\x0d\x72\x42\xad\x51\xd3\x49\xba\x3e\xb6\x5a\x4b\x67\xe3\xde\x49\xf5\x4b\x5e\xa9\x55\xce\x42\x4c\x07\xd5\xbd\xf1\x5b\xad\x98\x54\x7e\x07\xce\x64\x79\xca\xae\x6d\xe4\x94\xdc\x25\xdd\xa5\x12\x2f\x80\x9f\x9d\xd7\xc0\x86\x79\xc7\xd1\x31\x86\x47\x6a\x55\xfb\xe0\x1c\x4f\x62\x1c\x32\x38\xe6\xe1\x62\x6a\x8e\x1f\x38\x01\x6e\x49\x9d\x73\x73\x12\x17\x64\xe5\x89\x18\x52\x7f\xc4\x08\x0e\x31\xfd\xda\xfc\x0c\xb3\x34\x9b\xcf\x5a\xed\x2e\xce\xad\xb6\x0f\xb9\x9f\x3d\xde\xbc\x8e\x7e\x93\x93\x24\x7d\xa5\x16\xcd\xe7\x25\xbf\x2f\x9a\xc7\xdf\xdc\x73\xdb\x7d\x58\xfe\xdc\x07\xbd\xf9\x25\x30\x89\xb6\x71\x4e\xe2\x86\xae\x92\x9f\x7f\xe1\x97\x3e\x19\x97\xdf\x66\x97\x3e\x7d\xfc\x67\x6e\xc9\x5e\xfd\xb2\x59\x7a\x48\x17\xde\xbc\xdc\xa5\xc7\xbb\xbf\x5c\x9e\x1e\x7f\x93\x5f\xa2\x76\xc9\x3b\x98\x06\x0b\x96\xd3\xea\xe7\x7e\x89\x7b\x37\xe2\x15\xbc\x0a\xdc\x82\x17\x45\x43\xd0\x61\x62\x03\x47\x52\x43\xf0\x15\x78\x82\xcf\xa2\x3c\x01\x18\x82\xb3\xe0\x99\x55\xde\x04\x2e\xed\xe5\x57\xe1\xb6\xdd\xbf\x80\x9b\xa8\x3e\xc0\xbc\xcd\xe2\x3c\xb3\x89\x3f\xab\xd9\xeb\x75\x50\xff\x05\x8f\x80\x17\x78\x03\xec\x81\x27\xbb\x57\xf6\x1a\x9a\x85\x47\xee\x6b\x1e\xa8\x75\xbc\xa4\xbd\xbf\xd9\xa4\x95\x7b\x5f\xd1\x78\xdc\xd8\x63\x94\x6f\x82\x93\xad\x46\x47\xf1\xda\xe0\x9a\x02\xd6\x88\x05\xf7\x87\xff\xe0\x6d\xf6\x59\xc5\xe5\x3b\x97\xd8\x67\x92\x6b\x3f\x98\xa2\x77\xe5\x3e\x49\x67\xe7\x1e\xdb\xe2\x7d\x93\x71\x9e\x74\x0b\x9d\xe4\x39\x6a\xba\x95\x2f\xb2\x9e\xa4\xf2\x9e\x88\x3a\xc4\xff\x5b\x9f\x50\x39\xa6\x8d\xa7\x36\xaf\x59\x6a\x6c\xd6\x99\x79\xde\x7a\xdb\xcd\x63\x0f\xef\xc1\x27\xd6\x3b\x45\xf7\x4f\xc4\x0e\x8e\xa7\xbf\x45\x17\x7a\x71\x00\xfc\x8a\x97\xea\xb5\x07\x7c\xd3\x49\xd7\x38\x03\xf7\x31\xae\xec\xbc\xef\xa6\xa6\x6a\xd5\x2b\x1c\x40\xde\xd1\x4c\x38\x6b\x15\x87\xe2\x2d\xb8\x77\xab\x9e\xab\x97\xbf\x80\xdf\xd0\x4a\x3e\x53\x09\x73\x59\xf3\x02\x34\xa7\x97\xf7\x25\x1e\x93\xf6\x4d\xbb\xe7\x1b\x7c\xf6\x80\xd6\xe0\x17\x27\x79\x53\xe2\xc8\x9a\x78\x0b\x38\x2a\xd6\x6f\x7d\xa3\xf5\x4d\xf2\x3c\x7c\x26\xaa\x7f\x8b\xea\x7d\xc1\xb5\x71\x98\xf4\x15\x5e\xed\xe5\x95\xd1\xd3\x46\xbc\x6e\x3d\x9e\x7a\x0a\x7c\x3c\xfe\x10\x6e\x6a\xd4\xcf\x8d\xc2\x31\xf8\x83\x8f\x17\xf9\x31\x30\x98\x75\x1e\xee\x6e\x7e\x7b\x76\x5c\x12\x4f\x34\xd5\x7c\xef\xe0\x1e\x13\x8e\xc3\x17\x2f\xea\xf7\xd0\x0f\x70\x49\x3c\xa9\x5f\x9e\x5b\x1a\xf7\x6d\x8b\x66\x05\xe6\x07\x36\x8f\x05\x3d\xc9\xb2\x6b\xd3\xae\xcf\xd1\x7b\xca\x59\xba\xc3\xdf\xe8\x05\xfd\x25\xf9\xa5\x7e\x4c\x63\x93\xc7\xa1\x93\x6f\xa4\x17\xc1\x27\xe1\x83\xc0\x97\xf5\x42\xc2\x09\x7d\xfd\xa4\xf8\x1a\x8f\x76\xee\xe5\x58\x37\x49\x4b\xd0\xa7\xac\x1e\x8b\xbc\x55\xf2\xa4\xd6\x0f\x65\xbf\x3b\x6b\xa3\x4d\x93\xee\xd9\xec\x1e\x67\x72\x4d\xa0\xd6\xc1\x1f\x7d\x3e\xde\x84\x5a\x31\xee\x9b\x7c\x9f\x56\x73\x28\x78\x26\xab\x6e\x79\xa6\xdb\x67\x2c\x93\x63\x8d\xbc\xd7\xd2\xc6\x61\xf6\xb8\x58\x1d\xb4\xce\xa1\xd4\x08\x9f\xab\xa4\x3b\xd5\xf8\x76\x56\xe2\x04\x16\xf0\x8b\xd4\x2d\x58\xb5\x5e\xa1\x71\xee\x04\x33\xe4\x93\x5e\xb0\xd3\xfa\xe4\x9e\x38\xc2\x33\x60\x25\x6a\xf6\xc2\x1e\xd4\xb7\xd5\xf9\xec\xfa\x4f\x1e\xc9\x89\x71\x94\x66\x54\x9b\xfa\xc9\xa4\x7e\x74\x95\x0e\xef\xfb\x83\x2f\xf0\x6c\xfc\x55\x3b\x4f\xc3\xcb\x36\x6b\xcb\x1e\x23\x38\x7c\x19\xbc\x1f\x69\x35\x77\x23\x9f\x60\xba\x56\x7c\xa2\xbc\xed\xa4\xba\x22\xe6\xd4\x29\xde\x65\x95\xc6\x50\x8f\xd4\x62\xa7\x59\x87\xcd\xb5\xa2\x72\x9b\xbd\x66\x89\x2d\xb5\xc7\xf3\x70\xdd\xb8\x39\x47\x67\xf5\x22\xd4\x58\x27\x2c\xac\xc2\x33\x77\x1b\xd5\xa3\x99\x9f\x58\xfc\x3c\xe8\x09\x3f\xe0\x63\x90\xe7\x84\xe7\xc0\x1c\x78\xc1\x4b\x50\x17\xbd\x74\x1e\x2d\xa2\xfe\x2c\x07\xa3\xe3\x12\x1c\xe3\x0d\x77\x6d\xc1\x0b\x5a\xcf\x3a\x39\x87\xb5\x8b\xe7\xa9\x56\x2f\x6b\x7d\xd3\xe8\xe7\xb5\x79\xa4\xea\x9b\x9a\xc2\x63\x70\x4f\xea\x9a\x18\xa3\x05\xd6\x47\x8f\xce\x61\xb3\x34\x0e\x7d\xb1\x79\x63\xeb\x5a\x36\x68\x7e\xc0\xba\xe0\x77\xdc\xfb\xce\xc1\xfd\xe7\xa8\xb9\x29\xe7\xce\x9a\x59\xe2\x9d\xe0\xd4\xac\xda\xe4\xac\x76\xf6\x4a\x3f\xa3\xaf\x63\xbd\x70\x72\x3d\x02\x4b\xe0\xf7\x53\xbd\x4c\xbf\xf6\x3a\xe0\x83\xb5\x46\x69\x55\xa7\x99\xd4\x17\xbc\xce\x2f\x7d\xc7\x7f\x6e\x77\x7e\xb9\xc2\x27\xc7\xf3\xd9\x1b\xb7\xbc\xf1\x6f\x4c\xcf\xc7\x3f\xff\x76\xd3\x03\x19\x01\x1a\x4b\x78\xd4\x40\x76\x15\xa8\x7f\x61\x7a\x20\xe4\x49\x62\x6d\xa4\xac\x26\x03\x61\x4c\x4a\x28\xe2\x58\xed\x4d\xca\xac\xff\x57\x2f\x6c\x84\x70\xdb\x09\xbb\x57\xe3\x91\xdf\x06\x10\xa3\xcc\x3d\xa2\x6c\x4d\x41\xa5\x21\xd2\xe2\xc6\x93\x73\x02\x68\x80\xd2\x6b\x10\x8d\xd1\xb7\xa2\xd8\xd4\x08\x4f\x5e\x64\x06\x84\x55\xe4\x3f\xbb\xe1\x9d\x45\x84\x66\xf4\x92\x0b\x6d\xee\xbd\xb8\xad\xd8\x3b\x35\x5c\x7a\x16\x62\x36\x50\x89\xb0\x00\x32\xc2\x43\x81\xee\xc3\x33\xce\xbd\x9b\x47\x04\x8e\xb3\x73\x6e\x04\x1a\x80\x1a\x48\x1b\x99\xf5\xd5\x63\x33\x88\x78\x89\x29\x79\x1a\x06\x2f\xf2\xac\xd8\x6e\x32\x0d\x80\x18\x32\x31\xa1\xa9\xfc\x99\x4e\x03\xed\x56\x82\xbf\x0f\xb0\xac\x39\xac\x35\x98\xd2\xf0\xcd\x9a\xbc\x41\x26\x53\x66\x83\x66\x81\xbb\xd8\xf3\x1a\xc4\x77\xdb\x5b\x33\xc8\xff\xd6\xa0\xd4\x2e\x52\x46\x2c\x6a\x42\x6d\xe8\xae\x21\xf4\x32\xf9\x79\x69\xd4\x10\x01\x8a\x72\xd2\xf0\x66\x1f\xe6\x35\xbb\x09\x9b\x7c\xf8\x38\x6a\x7d\x1b\x18\xb4\x1a\xa2\xb7\x9e\x33\x44\xa7\x53\x33\x8d\x20\x71\x3f\x04\x1c\x32\x68\x25\xa0\x16\xab\xec\xf7\xb7\xa1\x40\x74\xd2\x32\x11\x16\xbe\xc8\x11\x46\xd0\x8c\x56\xf6\xfc\x83\xd5\x4e\x43\x28\x88\x7d\xd0\x90\xcb\xf0\xad\x01\x75\x92\xb9\x81\xd8\x73\xe3\x31\xaa\x34\x20\xac\xf4\x45\x04\x64\x0f\xa1\x59\xbe\x56\x0d\xfe\x17\x37\x0c\x8d\x06\x2f\xac\x81\x80\x20\xe2\x59\x82\x1d\xf5\x65\x80\x61\x7c\x74\xf3\x10\x35\x24\x02\x4f\x36\x7c\xea\xdf\xd6\x23\x5f\x34\xb1\x69\xc7\x50\xf2\xe7\xc0\x19\xf8\x9a\x35\xdc\x83\x38\xc9\x37\xe6\x65\xd0\x17\x47\xac\x69\x06\xad\x13\xc1\xcd\xfe\x7b\xd4\x17\x0b\x9b\x06\x68\x36\xd0\x15\xd1\x99\xd9\x8f\x7e\x4f\x6b\x50\x74\x5f\x70\x68\xc3\xcf\xc6\xeb\x04\x9c\xd1\x14\x71\x7f\xee\x69\x03\x77\x19\x4e\x72\x63\xef\x37\x5e\x4b\x8b\x06\xef\x9c\x87\xdc\x1b\xd1\xcb\xf8\xd0\xa8\xd0\x30\x74\x6a\x0e\x10\x2c\x88\x19\xd3\x47\xe3\x94\xf4\x65\x83\x0d\x8c\x46\x8f\x1b\x75\x69\x43\xc9\xd9\x8d\x68\x96\x79\x35\x71\xd2\x80\xc5\x06\x31\x93\x8b\x12\x38\x89\x12\x15\x1a\x7f\x1b\xa8\x55\x2e\xc4\x9c\x9d\x33\x58\x93\xb4\x79\x33\x02\x1f\xc0\x25\x60\xcf\x04\x3e\x4b\x50\xd5\xf8\x83\x83\x2c\x43\x6c\x46\x4a\x83\x6a\xf8\xaa\x52\xd3\x5d\x6b\xf8\x39\xc8\x24\x60\x86\xb3\x06\x88\xc4\x0f\x0e\xab\x84\x07\x6b\x1c\xf4\xa5\x03\xdc\x85\x71\x83\x87\xa8\xdb\x45\x46\xc6\x04\x7e\x73\x11\xda\xe3\xc0\xdf\xc4\x35\x69\x88\x4d\xbc\xac\x99\xcf\x7e\x7e\xee\x51\x69\x78\x33\x8b\x43\xb8\x13\xb1\x80\xa7\xe1\x06\x38\x97\x5a\x4d\x32\x5d\xd4\x00\x7b\xb6\xaa\x5d\x78\x65\x12\xc7\x83\x0d\xea\xb3\x15\x17\x9a\xf9\xde\x3c\xc7\x59\x78\xee\x84\x73\x0c\xe0\xa6\x3c\xcc\x1a\xec\x73\x4f\x1b\x00\x6a\x50\x08\xae\x31\xd6\x36\x10\xcb\xce\xc7\xd6\x2c\xb4\x6e\xb4\xac\x41\x68\xfd\x2c\x9b\xbe\x90\xb3\x41\x8a\x8c\xb3\x19\xe0\xc5\x73\x88\xc1\xc0\x20\x70\x56\x4c\x63\x23\x6c\xda\x70\x71\x70\x5c\x1a\xc6\xf5\xe5\x24\x18\xcd\xca\x23\xb1\x4b\xd2\x9b\x5e\x43\x42\x33\x1e\xfa\x52\x8c\xfa\x05\xb7\xad\x06\x7a\x60\x84\x98\x63\x38\xa9\x6b\x34\xa5\x97\x61\x63\xff\x55\x67\xa4\x7e\x87\x7f\x06\x00\x00\xff\xff\x97\xc1\x0a\xd5\x00\x20\x00\x00")

func res_res_go() ([]byte, error) {
	return bindata_read(
		_res_res_go,
		"res/res.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"res/doc/sample.txt": res_doc_sample_txt,
	"res/doc/usage.txt": res_doc_usage_txt,
	"res/messages_en.json": res_messages_en_json,
	"res/messages_zh.json": res_messages_zh_json,
	"res/res.go": res_res_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"res": &_bintree_t{nil, map[string]*_bintree_t{
		"doc": &_bintree_t{nil, map[string]*_bintree_t{
			"sample.txt": &_bintree_t{res_doc_sample_txt, map[string]*_bintree_t{
			}},
			"usage.txt": &_bintree_t{res_doc_usage_txt, map[string]*_bintree_t{
			}},
		}},
		"messages_en.json": &_bintree_t{res_messages_en_json, map[string]*_bintree_t{
		}},
		"messages_zh.json": &_bintree_t{res_messages_zh_json, map[string]*_bintree_t{
		}},
		"res.go": &_bintree_t{res_res_go, map[string]*_bintree_t{
		}},
	}},
}}
