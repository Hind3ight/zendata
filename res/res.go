package res

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _res_doc_sample_txt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xcd\x6e\xda\x40\x14\x85\xf7\x79\x8a\xbb\xe8\xd6\x44\x59\x64\xdb\x27\xe8\xa6\xca\x03\x54\x0e\x9e\x28\x48\x98\x69\xeb\x41\x22\x59\x59\x08\x02\x34\xa6\x50\xe5\x47\x95\xa9\x4a\x52\xe1\x86\x2e\x3c\x49\x55\xa9\x31\xfe\x49\x1f\x86\xb9\x33\xce\x8a\x57\xa8\x6c\xb7\x44\x44\x2c\xfa\xe3\x85\x67\x31\x77\xce\xf9\xce\x3d\x00\x00\x4f\x9e\x1e\x1a\x25\xd2\x20\xa0\x59\x20\x2f\x66\xb2\xcf\xd5\xb7\x48\x45\x63\x39\x18\xaa\x49\xb8\x88\x9d\x94\xdf\xa9\x84\xe3\xad\x87\xed\xdb\xf4\xda\x4f\xa7\xb6\xf2\x7b\xf8\xf5\xa3\xb4\xaf\xe6\x76\x73\x63\x63\x55\x64\x1f\xe4\xd8\x53\x1f\x8e\x45\xf2\x43\x9d\x4e\x31\xe0\xf8\xe6\xcb\x9a\xb1\x03\x30\x88\x49\x37\x19\xb1\x58\xe9\x40\x37\xab\xa0\x95\x61\x6b\x1b\xb4\xbd\x0a\xa9\x1a\x90\xff\xb7\x40\xa3\xc5\x14\xad\xb3\x97\x75\x56\x62\x0d\x06\xda\x1e\x30\xd2\x60\xb9\xda\xf2\x93\xbd\xab\xf4\xd2\x91\x67\x37\x19\xfc\xe9\x58\x76\x87\xf8\x2e\x11\xd1\x64\x6e\x37\x0b\x8c\xfb\x76\x5f\x25\x5c\x9e\x77\x44\xf4\x7d\xd5\x77\x11\x3b\xc5\x8b\xad\xed\xa5\xc4\x22\x76\x44\xe4\x65\x36\xf2\x22\xc6\x78\xa0\xdc\x56\x7a\x77\x82\x9d\x10\xbb\x37\x8f\x78\x0a\x49\x11\xf8\xff\x1b\xb1\x52\xb3\xc8\x6b\x56\xb2\x5e\x55\xb3\x88\xf9\xc1\x80\xe9\xbb\x55\xf2\xa2\xa6\x9b\xe4\xcf\xf3\x46\xde\xce\xf3\x67\xe9\xb5\x8f\x03\x0f\x93\x4f\x18\x0f\x56\xd1\x1f\x7c\x96\xe8\x59\xc5\x97\x53\x1c\xf6\x45\x10\x3e\x38\xae\x09\x64\x14\xa8\xbb\xba\x45\x7e\x05\xfa\xc7\x16\xff\xb2\xbd\x35\xbd\xa5\x9f\x8f\xd4\xe8\xfc\x3e\x7a\x9f\xf2\x49\x51\x6e\x7e\x5d\xa6\xa6\x49\x6b\x39\x8a\x08\x7c\xe5\xb6\xf0\xa8\x8d\x7c\xb6\x26\x4b\x05\x1a\x06\x2d\xe7\x7a\x9b\x87\xa4\xc6\x74\x5a\xec\x9e\x02\xad\x3f\xe2\x13\xd1\x5b\xe9\x74\x90\xbb\xca\x6d\x15\x94\x18\x9e\xec\x94\xf7\x89\xa9\x2f\x62\x07\xbb\x23\x8c\xc2\xcc\x11\xb9\x2b\x66\xbd\x02\x36\xdb\xe9\xef\xbd\xd3\x3a\x53\x23\x8e\xc9\x99\x08\x8e\xe7\x76\xf3\x67\x00\x00\x00\xff\xff\xe0\xee\xff\x52\x74\x03\x00\x00")

func res_doc_sample_txt() ([]byte, error) {
	return bindata_read(
		_res_doc_sample_txt,
		"res/doc/sample.txt",
	)
}

var _res_doc_usage_txt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x4d\x53\xda\x40\x18\xc7\xef\xfd\x14\x7b\xe9\x71\xe5\xd2\xe9\xa1\xdf\x06\x25\x14\xdb\x40\xac\x59\xeb\xcb\x29\x20\x2f\xa2\xc1\xd8\x0a\xbe\x50\x54\x70\x40\x69\x67\x92\xd0\xe9\x54\x42\x02\xf8\x61\xd8\xe7\xd9\x70\xe2\x2b\x74\x96\x58\xa1\x4e\x73\x4a\x32\xbf\xe7\xf7\xfc\xff\x3b\x4b\x08\xa1\x29\x42\x69\x4a\x51\x37\x08\xc1\x9b\x8e\x68\x1c\x81\xe7\xc0\xe1\x77\xfe\xd8\xc2\xac\x3b\x31\x72\xaf\x24\xa3\x13\x4a\x75\x85\x11\x42\x42\x67\x2c\x46\x0e\xf4\x3b\x50\xe8\x87\xae\x1d\x76\x0d\xf8\x79\x8d\xc6\xfd\xc4\xc8\x89\x6a\x17\x0f\xfa\xe0\x0e\x60\x74\x0a\xe5\x8a\xf8\xe6\xc0\xa8\x36\x6d\x18\xe1\x5d\x16\x1b\x65\x28\x5e\xe2\xd5\xfe\xf4\xf2\x44\x3a\xa5\x74\x1a\x5c\x84\x4e\x1b\x9b\x03\xac\x38\xe0\xd4\xf9\xa0\x8c\x67\x25\x1e\x3c\x88\xea\x0d\x1e\x9c\x60\xad\x87\x15\xe7\x69\xff\xfc\xa1\x09\x42\x69\x42\x49\xc6\xb7\x54\xf6\x77\x7a\x79\x6e\x01\xee\x12\x4a\x77\xe3\x69\x75\xfe\x85\x66\x09\x9c\xfa\xff\xc1\x35\x42\xe9\x9a\xb6\x95\x61\x0b\x70\x79\xbb\xa8\xe7\xf1\xaa\x85\xb5\xde\xf3\x84\x1c\xa2\xc9\x75\x45\x4d\xc8\xd7\xa8\x5b\x38\x3e\x85\x92\x2f\xea\x79\xb0\xcf\xd1\xf9\x3d\x1b\x9a\xa2\xda\x9d\x1a\xe7\x60\xf5\xe1\xa0\x38\xad\x57\x27\x46\x0e\x1b\x3f\x22\x3d\x9e\x3f\xcc\x86\x66\x14\x3e\x1a\x9c\x27\x8d\x82\x71\xcf\x96\x2b\xcb\x86\x3c\xae\xb9\xec\x9f\xfe\x1a\xa1\x54\xdb\x62\x64\xa9\x56\xa4\x78\x59\x2b\x29\x43\x6a\x9b\xe9\xf8\x9c\x7d\x62\x9a\x43\x18\x5a\xb3\xa1\x89\x55\x17\xcd\x2c\x53\x76\xd8\xc4\xc8\x7e\xd0\xb5\xcc\xc4\xc8\xee\xa4\x55\xf8\x6a\xea\x9f\xd4\xd0\xb5\xc1\xea\x3c\x27\xe4\x9e\x1f\x81\x4b\x29\x18\xa1\x94\xc5\x57\x55\xe5\xa5\x5b\xc2\xf2\x7f\x54\x51\x54\xbb\xdc\x3f\x8e\x52\xae\x67\x74\x65\x93\x45\x6e\x51\xcf\x87\xad\x2e\x9c\x54\x16\x46\xfa\x59\xd9\x5c\xd5\xf4\xb9\x10\x6e\xaf\xe1\xb0\x89\x76\x1b\xac\x1c\xd6\x7a\x32\xef\xc5\x58\xb4\xfd\xd0\xbd\x13\x41\x31\xec\xed\x87\x6e\x6d\x71\x35\xa5\x83\x7b\x3e\xf7\x8b\x78\x36\xe0\xe3\x47\x68\x74\x79\x10\x60\xde\x8a\xee\x1e\xf7\x6c\x2c\xdf\x87\x2d\xf3\xb5\x0e\x5f\x46\x3c\x68\xcf\x86\x26\x04\x7e\xe8\x38\xd0\x2b\x42\xe1\x01\x0e\x9b\x50\xe8\x88\x63\x17\x6e\xf7\xc1\xba\x98\x96\x2c\xee\xd9\x92\x29\xf4\xf9\xe8\x14\xcf\x06\xf8\xab\x06\x56\x4e\x14\xee\x79\xd0\xe1\xde\x11\x34\x7a\x70\x65\x3c\x9d\x46\x8a\xb1\x0d\xfd\x5d\x2c\xb6\xbd\xbd\xbd\xb2\xc7\x14\x9d\xad\x67\xde\xaf\x64\x14\x16\x5b\xd5\xb4\x8f\xb1\x3d\x96\xa4\x09\x6d\x2d\x16\x4f\x24\x28\xd3\xe8\x46\x9c\xa5\xe8\x9b\xb7\x2b\x29\x96\x56\xff\x04\x00\x00\xff\xff\x3a\x89\xa5\xcd\x74\x03\x00\x00")

func res_doc_usage_txt() ([]byte, error) {
	return bindata_read(
		_res_doc_usage_txt,
		"res/doc/usage.txt",
	)
}

var _res_messages_en_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x41\x6f\xdb\x30\x0c\x85\xef\xf9\x15\x84\x81\xa0\x97\x2c\xc0\xb6\x9b\x8f\x2b\xba\x61\xc0\x2e\x6b\xd7\xd3\x3a\x08\xaa\x4c\x3b\x02\x1c\x2a\x15\xe9\x25\x41\xd1\xff\x3e\x50\xb6\xb7\x62\x88\x6c\x6f\x97\x1c\xcc\x4f\xef\x89\x8f\x62\x9e\x57\x00\x45\x6b\xa9\xe9\x6c\x83\x45\x09\x05\xd2\x9b\xfb\xbb\x62\xa3\x9f\xf7\xc8\x6c\x1b\xe4\xa2\x84\xef\x2b\x00\x80\xe7\xf4\x0b\x50\xf8\x4a\xd1\x4e\xab\x09\x4d\x1f\x25\x5a\xe2\xd6\x8a\x0f\xa4\xd5\x7b\xad\x96\x45\xaa\xbe\x6c\x2e\x9d\xc7\x93\xdd\x1f\xda\xbc\xc2\x4d\x5f\x9f\xd4\xa8\x43\x34\x73\x3a\xb8\x6d\xb6\xb0\xe6\x29\x19\x09\x62\xdb\xac\xc0\xb7\x54\x1d\x8f\x5f\x3a\xff\x88\x8d\x27\xe3\x02\xd5\xbe\xc9\xca\x7c\x50\x08\x24\x40\xcf\x6d\x40\xce\x07\x84\x2b\x3c\x79\xb9\xd2\xcf\x4f\x9d\x97\xed\x64\x60\x24\x18\xcd\xef\x69\x65\x73\x53\x0c\x64\x87\x30\xa2\x70\x0e\x1d\x1c\x2d\x89\xda\x74\x8c\xe5\x03\xbd\xdd\xc2\x0d\x35\xad\xe7\x1d\xac\xf9\x81\xde\x6d\xe1\x7a\xe7\x09\x19\x67\x92\x72\x5d\x8c\x48\x32\xd7\xeb\x75\x8f\x0d\xad\x96\x93\xe1\x71\xe7\x1c\x32\x1b\x09\x26\xa2\xad\xb2\x9a\x03\xa7\x3d\x28\x07\xb5\x6f\xe7\x6e\x5b\x5b\xdf\x8e\xba\x46\xf9\xac\xf8\x47\xeb\xdb\xbf\x95\x27\x87\x31\x4a\x1f\x6c\x64\x5c\xa6\x9d\xd0\x34\x18\x17\x48\x34\x9e\x50\xff\x87\x57\xb4\xa4\x5b\x99\x73\x5b\x33\x78\x06\x0a\x02\xb7\xc8\xb7\x89\x85\x3a\xc4\xbd\x95\x0d\x48\x3c\xff\xb9\x88\x65\x25\x3e\x13\xcb\x2b\xf7\x4b\xf6\x0d\x12\x46\x2b\x68\x22\xba\x10\xab\xbc\xf5\xa7\x01\x84\x75\x05\x03\xab\x76\x43\x8b\x1b\xe0\x03\x52\xa5\x45\x46\xb7\xac\x63\x17\x88\xd0\x89\xe1\xa7\xd6\x4b\x3e\xe1\x7a\x48\x38\x1c\x90\xe0\xee\xeb\x17\x2f\xbd\x21\xc6\x18\x62\xb9\x34\x5e\x3c\xa1\x33\x4f\x1d\xc6\xf3\xac\x91\xa2\x90\xd0\x7f\x9c\x5d\x38\xce\x6a\xf7\xd3\xe9\x3b\x7e\x0f\x31\x1c\x97\x5a\xb0\xfd\x89\x06\x4f\x0e\xf3\x7f\x65\xa3\x87\xa2\x90\xd0\x12\x16\xcd\x21\xa2\x3e\x00\xb1\x8f\x13\xef\x7c\x14\xef\x61\x48\xf0\x32\x79\x4f\x8c\x51\x4c\x65\xc5\xce\xaa\xf7\x2c\x28\x3b\x23\xee\x5b\x34\x6e\xa7\x1b\x60\xc4\xef\x27\xee\xad\xef\xb3\x07\x41\x41\xdd\x9f\x65\x0b\x71\xb6\xfb\x7c\xd6\xaf\xb7\x41\xc1\xb4\x07\x0c\x9e\xf2\xbb\xb0\x02\xf8\xb1\x7a\xf9\x15\x00\x00\xff\xff\x44\x3d\xa9\x66\x95\x07\x00\x00")

func res_messages_en_json() ([]byte, error) {
	return bindata_read(
		_res_messages_en_json,
		"res/messages_en.json",
	)
}

var _res_messages_zh_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\x5f\x4f\x1a\x4b\x18\xc6\xef\xf9\x14\x13\x12\xe2\x0d\x31\x39\xe7\xd2\xfb\x73\x71\x92\x73\x73\xec\x65\x6d\x36\xe3\xf2\x82\x9b\x2c\xb3\xba\xb3\xb4\x58\x63\xb2\x31\x35\xa2\x40\x35\x05\xc4\xfa\xa7\x68\x5b\xaa\x6d\x02\x8b\x89\xb1\x2b\x2e\xf8\x61\xba\x33\x0c\x57\x7c\x85\x66\x17\x35\xda\xb0\x0b\xd1\x1b\x12\x66\xde\xfc\x9e\x79\x9e\xf7\x7d\x77\x25\x82\x50\x54\xc5\x24\x95\xc1\x29\x88\xce\xa0\xe8\xdb\x85\x68\xdc\x3b\x4b\x03\xa5\x38\x05\x34\x3a\x83\x5e\x46\x10\x42\x68\xc5\xff\x45\x28\xaa\x24\xbc\xba\x8c\x77\xeb\x97\xfa\x87\x86\x8e\x09\x55\xb1\xa1\x68\xc4\xbb\x65\x76\x93\x6d\x7d\x1f\x38\xfb\x51\xbf\x60\x35\x3e\x0a\x01\x59\x9c\x5e\x54\x83\x21\xae\xdd\x75\xbb\xf9\x31\x90\xa4\xa6\x4b\x63\x41\xdd\x3c\xfb\xb6\x86\x62\x34\x0c\x34\x0f\x29\x85\x48\xb2\x46\x92\x4a\x2a\xd8\x97\x63\xb2\xd3\x7c\x7f\xbd\xd8\xeb\x34\xe3\x48\x74\x4b\x6c\xbd\x3e\x05\x59\xc5\x98\xea\x9b\x26\xdb\x68\xff\x32\xd7\x42\x1d\x13\x03\x74\xe9\x3e\xee\x20\x15\x61\xfd\x1c\xa2\xdd\xce\x31\x3f\xac\xf1\xc3\x03\xb7\x73\xd3\x2b\x9f\xf5\xf6\xdf\x09\xab\x21\xce\xcc\x99\x39\xf2\xd7\x34\x12\xf9\x73\xbe\xbb\x81\x62\x74\x8e\xfc\x3d\x8d\x5c\xbb\x31\xfc\x17\xf6\x00\x39\xa3\xeb\x40\x8c\xb1\x36\x3b\x25\xb6\x59\x1c\xda\x7c\x98\xff\x28\x24\xcd\xc8\x32\x50\x2a\x19\x9a\xa4\x03\x4e\x84\x98\xba\x66\xdb\xbb\x7c\x77\xc3\xbd\xbe\x8c\x51\x9e\xdb\x61\x5b\xb5\x31\x71\x25\xb1\xa2\xde\x71\xa5\xa4\x12\xd2\xe1\xc7\x70\xf6\xf5\x5c\x5c\xd4\x27\x84\x2f\x62\x9d\xc2\x18\xfa\xe9\x17\xfe\x69\xe7\x19\x74\x1d\x13\x6f\x95\x82\xf8\x31\xea\xda\x45\xbe\x67\xcd\x02\x9d\xf5\x2b\xf9\xb1\xc3\x9c\xed\x81\x53\x60\xad\x23\x61\x55\x86\xfa\xae\xdd\x9e\x05\xfa\x2f\xa1\x06\x65\xd6\x95\x38\x3f\x79\xf8\x84\x51\x6f\x48\x01\x01\x1d\x1b\x20\xe9\x20\x6b\x7a\x22\x58\xbf\x57\xae\xf1\xdc\x4e\x2c\xe1\xda\x3f\x44\xb3\xc5\x3a\x15\x96\x6b\xdd\xb9\x1d\x38\x05\x61\x56\x79\xf5\x32\x96\xe8\x9d\x7e\x98\xd0\xb5\xac\x11\x02\xb2\x21\xd1\x25\x55\x31\x82\x73\xe5\x9b\x25\xe6\x98\x2f\xfe\xff\x4f\x31\x80\x57\x5a\xbc\xd8\x64\xed\xd2\x5d\xc0\x03\xa7\xd0\x2f\x7f\x14\x96\x35\x70\xf6\x63\x74\x42\x61\xc8\x82\x2c\x2d\x65\x40\x5f\x0e\x14\xbd\x95\xab\xd5\x85\xf5\xf9\x5e\x49\x58\x0d\xb6\x5d\xf7\x95\x9e\xa4\x7b\xdb\x66\xed\xcd\x18\x59\x71\x52\x18\x36\xf3\x0f\x8f\x13\x0b\x51\xfc\x1a\x24\xc8\xca\xa0\x06\x7f\xed\x6e\x8e\x58\x63\xef\x1f\xaf\xe6\x19\x49\xca\x3a\x78\xa3\x63\xe0\xf9\x90\xc5\x60\xb9\x03\x76\xdd\x16\x27\x67\x4f\x6b\x9a\xa2\x82\x24\x2f\x78\x13\x2f\x19\x4a\x3a\x64\x4e\xfc\x59\x74\x6f\x9a\xbc\x7c\xc5\xab\x97\xfd\xea\x85\x6b\xb7\x1f\xe3\x43\xe7\x7f\x19\xa7\x83\xe3\x7a\x30\xfc\x5e\xdd\xad\x56\xfb\x7d\xef\xa0\xc9\x3a\x15\x6f\x35\x1b\x71\x34\x72\x05\x22\x08\xbd\x8a\xac\xfe\x0e\x00\x00\xff\xff\x1f\x94\x8c\xc0\x42\x07\x00\x00")

func res_messages_zh_json() ([]byte, error) {
	return bindata_read(
		_res_messages_zh_json,
		"res/messages_zh.json",
	)
}

var _res_res_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x99\xcf\x6f\xdc\xc8\xf1\xc5\xcf\x9a\xbf\x62\xbe\x02\xf6\x0b\x09\x30\xb4\xfc\xcd\xe6\x02\xbe\xec\x22\xd7\x1c\x72\x4d\x07\x02\xc9\x6e\x3a\x4a\x2c\xc9\x99\x91\x36\xbd\x0e\xf6\x7f\x0f\x3e\x55\x8f\x92\xe2\x35\x12\xc4\xc8\x61\x6c\x0d\x39\xec\xae\xae\x7a\xf5\xea\x55\xf1\xd3\xbc\xfe\x75\xfe\x90\x8f\xa7\x7c\x3e\x1c\xee\xee\x3f\x3d\x9e\x9e\x8e\x57\x87\x8b\xcb\xe5\x97\xa7\x7c\xbe\x3c\x5c\x5c\xae\x8f\xf7\x9f\x4e\xf9\x7c\xfe\xfe\xc3\xe7\xbb\x4f\x5c\xd8\xee\x9f\xf8\xef\xee\x91\x7f\xcf\x4f\xa7\xbb\x87\x0f\xe7\xcb\xc3\xf5\xe1\xb0\x3d\x3f\xac\xc7\xe5\xee\x21\xcd\x4f\xf3\xed\x29\xcf\xe9\x8a\xbf\x8e\x7f\xfc\x13\x6b\xbd\x3b\x3e\xcc\xf7\xf9\xe8\xbf\xbf\x3e\x5e\xed\x57\xf3\xe9\xf4\x78\xba\x3e\xfe\xe3\x70\xf1\xe1\xb3\x7d\x3b\xfe\xf0\xfe\xc8\x56\x37\xbf\xcf\x7f\xff\x43\x9e\x53\x3e\x5d\x99\x2d\x7c\xff\xf1\x79\xdb\xf2\xc9\x96\xbd\xbe\x3e\x5c\xdc\x6d\xf6\xc0\xff\xbd\x3f\x3e\xdc\x7d\x64\x89\x8b\x53\x7e\x7a\x3e\x3d\xf0\xf5\xdd\x71\xbb\x7f\xba\xf9\x1d\xab\x6f\x57\x97\x2c\x74\xfc\xee\x6f\x3f\x1c\xbf\xfb\xf9\xd2\x2d\xb1\xbd\xae\x0f\x17\xbf\x1e\x0e\x17\x3f\xcf\xa7\xe3\xf2\xbc\x1d\x7d\x1f\xdf\xe4\x70\x71\xeb\xe6\xbc\x3f\xde\x3d\xde\xfc\xf4\xf8\xe9\x97\xab\xff\x5f\x9e\xb7\x77\xc7\x0f\x9f\xaf\xb1\xf5\xe6\xa7\x8f\x8f\xe7\x7c\x75\x7d\xf8\xdf\x99\xa1\xa7\x96\xe7\xed\xe6\x47\x2c\xb9\xba\x7e\xc7\x12\x87\x5f\x0f\x07\x2c\xbc\x3d\xe5\xf3\x6d\x7a\x5c\x6f\xcf\xf3\xfd\xa7\x8f\xf9\xf6\xa9\x3c\x1d\xdf\xcb\xbb\x57\x97\xb1\xd4\x5b\x2c\x61\x89\xa5\x0a\xb1\x54\xd5\xd7\x3f\xdb\x16\xcb\xdc\xc5\x32\xd5\xb1\xac\x29\x96\x21\xc7\x92\xe6\x58\xba\x2a\x96\xba\x8b\x25\xf4\xb1\x6c\x63\x2c\xe3\x14\x4b\x98\x63\x59\x96\x58\x72\x88\x25\x0d\xb1\x74\x5d\x2c\xfd\x14\xcb\xd0\xc5\x92\x96\x58\x9a\xd1\xef\xcd\x43\x2c\xeb\x1c\x4b\xd5\xc6\xd2\x77\xb1\x54\x39\x96\x29\xc7\xd2\x84\x58\xba\x10\xcb\x14\x62\x19\xa6\x58\xf2\x12\x4b\x57\xc7\xd2\x34\xbe\x0e\x1f\xb3\xb5\x89\xa5\xed\x7c\x9d\xbe\x8a\x25\xf7\xb1\x74\x63\x2c\x53\x1f\xcb\x3c\xc5\xd2\xcd\xb1\xf4\x4d\x2c\xb9\x8e\x25\x0c\xb1\x34\x39\x96\x76\x8d\xa5\x63\x0d\xfd\xa6\xad\x63\xd9\xb2\x5f\x33\x3f\x0c\xb1\x2c\x5c\x6f\x63\x59\xb3\x9f\xa5\x1f\x63\x99\xb1\x65\x8d\x65\x19\xfd\x3c\x7c\x9a\x35\x96\x6d\x8e\x25\xb7\x7e\xfe\x61\xf4\xf5\xc6\xd1\x9f\xdd\x26\xff\xbf\x4d\xaf\x7e\xec\x36\x3f\x63\xcd\x67\x8e\xa5\xe9\x63\x49\x4d\x2c\x4d\x15\xcb\x5c\xf9\xd9\xf8\xbb\xd9\x62\x19\xb0\xa5\x89\x65\xdd\x62\x49\xbd\xf6\xc6\x37\xec\xd5\xc6\xd2\x62\x33\x7e\x9c\xdd\xfe\x25\xc4\x12\xf0\x5b\x8a\x65\xc2\xd7\x9b\x9f\x31\x74\x6e\xe3\x9c\x62\x09\xf8\x3e\x79\x1c\xb6\x4e\x31\xe4\x77\x63\x2c\xcb\x10\xcb\xd6\xc4\x32\x72\x2f\xc4\xb2\xe1\xa3\x36\x96\x05\x1f\x6f\xb1\xe4\x21\x96\x91\x4f\xeb\xfb\xf3\xc1\x8f\xc4\x15\xdf\x65\xd6\x0b\xb1\xf4\xad\x7c\x99\xdd\x56\xd6\xec\x5a\xb7\xab\xcb\xee\xa3\x5c\xf9\x1e\xac\xb9\x2e\xb1\x4c\x60\xa6\x76\x2c\xb4\x95\x9f\x83\x33\xb5\x63\x2c\xf5\xe4\xf7\x7a\x7e\x3f\x39\xe6\xb8\x3e\x2f\xee\x33\xe2\x3d\xd4\xb1\x0c\x4b\x2c\xf5\xe2\xf6\x2e\xf8\x7c\xf6\xf3\xe3\xe7\x49\x18\x36\x1f\x56\x7e\xae\xb5\x77\xec\xe2\x97\x05\xfb\xc0\x6f\x1f\x4b\x3f\xc4\x32\x34\xb1\x54\xac\x31\xb8\x8f\x88\x17\x76\x11\xab\xa1\x72\x8c\x70\x9d\xb3\x4d\xad\xef\x37\xef\x3e\x6d\x3c\x4f\x0c\x0f\xb2\x7f\x5b\xdd\x76\xce\x80\x0f\x89\x03\xe7\x07\x93\x75\x1d\x4b\xaa\xdd\x8f\xe4\x15\xcf\x54\x4b\x2c\x01\x7c\x2d\xfe\xfb\x7e\x73\xac\xf4\xab\xe3\x67\x14\x0e\xd9\x6f\x4c\x8e\x0f\xae\xb1\x56\xbb\xf8\xd9\xc8\x69\xce\x46\xbc\xe7\x3e\x96\xb5\xf3\x1c\x1a\x95\x93\xc4\x6b\xe8\x63\x69\x15\x77\xee\xad\xc4\x37\xb8\x5f\xd3\xea\xbe\x18\x67\x5f\x3b\x34\x1e\xc3\xba\xf2\xfc\xc6\xce\xb0\xf9\xef\x2b\x61\x90\xfd\x0d\x3b\x9b\x62\x51\x7b\x0e\xe2\xdf\x35\x78\x8c\x7a\xe1\xba\xcf\x8e\x1f\xee\x11\x6f\xcb\x17\x72\xb5\x72\x5f\xb1\x47\x2f\xfc\xcc\x8d\xe7\xf9\xb4\xb8\xdd\xe4\xc4\xd6\xc6\xd2\x11\x9f\xac\x7c\x6b\xdd\xe7\xf6\x6c\xef\xb6\x81\xa7\x6a\xf3\x18\x81\x73\xf2\x85\xef\xd8\x80\xcf\xc1\xe9\x88\x4f\x07\xe7\x24\xf2\x0f\xdf\x81\x05\xc3\x31\x31\x18\x1c\xc7\x9c\xbb\x25\x3e\xf8\x27\xc7\x52\x89\xd3\x0c\x43\xc1\xed\x5d\x66\xff\xed\xc8\xfd\xde\xf9\x61\x25\x2e\x83\xf0\xd7\x38\x56\xda\x5e\x98\x61\xaf\xcd\x6d\x4d\x9d\xdb\x00\x56\xd8\x07\xbf\x73\xcf\xf2\x07\xec\xd4\x8e\x0f\xd6\xee\x93\xfb\x83\x0f\xf7\xf0\x6b\x2b\xee\x85\x1b\x39\x13\x7c\x68\x39\x5d\xb9\x7d\x21\xf9\x75\xae\x35\x3c\xb7\xb8\x8d\xe4\x07\x38\x6f\xc0\xca\xa8\x7d\x17\xc7\x28\x9c\x6f\x98\x80\xc3\xe1\x3a\xe1\x0f\xee\x05\x5b\x2d\x79\xdf\xc4\x52\xb7\xee\xcf\x7e\x71\xff\xf3\xfb\x49\x38\x81\xe3\x07\x70\xd3\x3b\x2f\x11\x03\xd6\xb0\xb5\x3a\xaf\x1b\x61\xf2\x5c\x35\xde\x23\xf7\x46\x7f\xb6\x69\x3d\x0f\x56\xb0\xb9\x3a\xbe\xc8\xbd\x66\x11\x3f\x26\xd5\x81\xc1\x39\x8d\xbd\xf3\xe6\xd7\x13\x5c\x32\x7b\x1c\x6d\x1d\x70\x32\xc5\x32\xa9\x7e\xf0\xdd\xce\x3b\xbc\x62\xe7\xcb\x9a\xc7\x07\xae\xca\xd9\xff\x06\xcb\x9c\xcd\x70\x65\xbf\xbb\xdc\x05\xcc\x6f\xab\xec\xd5\x57\xe5\xca\x5e\xad\xdf\xea\x9d\xc3\xc5\xc5\x57\xaa\xf4\xbb\xc3\xc5\xc5\xe5\x29\x9f\xbf\x4f\x8f\xeb\xf7\x7e\xf9\xe6\xa9\x3c\x5d\xbe\x3b\x5c\x5c\xff\xa6\xb8\x3f\x9f\xe7\x0f\xdf\x5e\xdb\xa9\x6d\x13\x38\x4b\xee\xaf\x97\xda\x1e\x1c\xbf\xf8\x74\x4b\x8e\xf5\x71\x8f\x71\xed\x18\x83\xef\xf8\x3e\xd7\x5e\x73\x0c\x4b\xe2\x56\x62\x62\x7c\xbb\x7a\x6e\x51\xcb\xe1\xfb\xe6\x4d\x9d\x23\xb7\xc9\xfb\x24\x1e\x59\xb2\xd7\x73\x34\xc1\x58\xf9\xf3\xe8\x00\xe2\x83\x8d\x49\xfc\xc0\xfd\xae\xf1\xf8\xc3\x39\x83\xd6\x20\xa6\x69\xf2\x67\xc1\x26\x58\x31\x3c\x0e\xce\xbf\xd8\x49\x1d\xa2\x8e\xa1\x11\x5a\x72\x72\xf3\xe7\xc0\x22\xf9\x87\x4f\xe0\xd1\x4e\xbe\xe3\x19\x6c\x66\xbf\x61\xd7\x16\xb5\xb8\x3a\xb8\xfd\x96\x33\x39\x96\x21\x38\x6f\x84\xda\xd7\x5c\x2b\xd7\x20\x70\x28\x5a\x03\x1b\xc1\x33\x3e\x61\x0f\xd3\x0c\x8d\xd7\xd8\xa6\xf3\xda\x54\xcb\x36\xea\x11\xda\x02\xdc\xb3\xb7\xed\x3f\xba\xf6\x80\xfb\xd0\x4c\xd4\x00\xd6\x31\x0d\x14\x94\xb7\xd4\x95\xe4\xd8\xa6\x8e\xe1\x1f\xd3\x66\xc9\xf3\x99\x58\x52\x0f\xe0\x64\x72\x6f\xa0\xc6\x8d\xce\x8d\xa6\x69\x2a\x5f\x9b\x5a\x67\x78\x9f\x3d\xd6\xf0\xcb\x4b\xdd\x16\xaf\x90\x7b\x96\xdf\xc1\xcf\x09\x37\xc1\x77\xf0\x3f\xf5\x05\x3d\x07\xd7\x13\x0b\xea\xd4\x26\x9b\x8d\xd7\x3a\xcf\x51\x78\x90\x7d\xe0\x22\x6a\x1c\x9a\x85\x18\xb1\x06\x7e\x25\xdf\xcc\x5f\xc1\x6d\x83\x2b\xa9\x17\xd4\x29\xf8\xc1\x7c\xd2\xab\x4e\xaf\x5e\x4f\xf2\xec\x67\xe7\xda\xb4\xfa\x59\x76\x0d\x04\x17\x11\x1b\x62\x69\x79\xbe\x7a\x8c\xab\xb7\x31\x16\xef\xe2\x2f\x74\x03\x78\xa3\x16\x8c\xe2\x48\xfc\x09\x1f\x57\xb5\xf3\x43\xdd\x28\x66\xa3\xeb\x2d\xd6\x18\x75\x5e\xd3\x87\x83\xaf\x3f\x49\x37\xb2\x2f\xb8\xa1\x16\x74\xca\x21\xd3\x41\xc3\xab\xa6\x41\x07\x80\xe3\x51\xf5\x70\x16\xbe\xb7\xda\x75\x1f\xeb\x52\xeb\x92\xea\x1f\x7e\x03\x7b\x96\x53\xda\x9f\x7a\x44\x5e\x13\xeb\x24\x2d\x0b\x4f\xe3\xcb\x56\xb6\x91\x57\xe4\x62\xd6\xb9\x96\x4a\xba\xb3\x76\x3f\xa3\x61\x6b\xe9\x34\xd6\x86\x1f\x4c\x0b\xcc\xf2\x63\xe5\x7a\x91\xf8\x13\x13\xab\x91\xc9\xb5\x33\x7a\x7f\xc7\x2a\x6b\x50\x33\xd0\x1a\xac\x49\x1d\xe0\x3b\xdc\x8e\xf6\xc6\x47\xf0\x46\x2b\x7d\x8c\xaf\x78\x1e\xdc\xa2\x3f\xe0\x1c\xec\x22\x97\x1b\x71\x09\xcf\x11\x73\x30\x4f\x6d\xb0\xba\xb2\xb9\xdf\x59\x83\xb8\xf6\xe2\x22\x6a\x0b\x35\x9b\x5a\x83\x06\xa0\xbe\x8d\xaa\xfb\x8d\x78\x09\xad\x3a\xa8\x06\x12\x13\xf0\x8e\x1d\xe8\x2c\x9e\xc7\x07\xfc\x06\xbc\x53\x13\xd1\x2f\xec\x11\xd4\x57\x90\x47\xf4\x48\xe4\x28\x5c\x4a\x0e\x5a\xce\x2b\xdf\xa8\xdf\x70\x18\x71\xe3\xdc\xfb\x75\x30\x84\x3d\xa6\x79\x82\xdb\x90\xa5\x01\xc0\xfb\xcb\x33\xb5\x5f\x6f\xe5\x1b\xf4\x90\xf5\x14\x9b\x73\x4e\xa7\x73\xd4\xe2\x2d\x6a\x2c\x9a\x86\x58\xb0\x36\x79\x4c\xbe\x81\x01\x78\xc8\x34\xff\xe6\x3e\xea\xe5\x2b\xb0\x86\xfe\x6b\xa5\xe3\xa9\x7b\xf8\x97\x3c\x1b\xa5\x1b\x4d\x53\xf5\x9e\x03\xbd\xe2\x62\xdc\x93\x5c\xd7\xe2\x33\xd6\x82\x0b\x88\x3f\x98\xc7\xcf\x70\x33\x39\x6e\x5c\xd0\x79\xcc\xd0\x56\xac\x63\x7d\x46\xed\xf8\xc3\x9f\xa3\x78\x84\xdc\x07\xd7\x49\x7a\x14\xce\xa6\x26\xd9\xb9\x82\x6b\x7e\x38\xcd\x7c\x94\xc4\x9f\xb5\x7a\x8d\xd5\x35\x30\xb6\xb1\x07\x5c\x35\x2a\xef\xf0\x43\x68\xbd\xa6\x81\x39\xd3\x22\x8b\x63\x02\x5e\xb3\xda\xdf\x7a\x5f\x09\xaf\x73\xf6\x71\xb7\xb7\xf2\xbc\x83\x13\xb3\x7a\x3a\x9e\xa7\x96\x12\xfb\x24\x7f\xa0\xab\xc8\x4d\x62\x47\x0e\xa0\xe5\x3b\x61\x96\x35\x57\xf5\x9d\x68\xb2\xaa\x73\x7c\xc0\xe3\xe4\x10\xe7\x01\x97\x9d\xfa\x58\xb8\xc6\xfa\xe4\xb7\x7c\x1f\xbc\x17\xab\x75\x3e\x6c\x00\x23\x68\x51\x7a\x68\xcb\x95\xd5\x6d\xc4\xf7\x96\xeb\x93\x38\x78\xf2\x35\x6a\x69\x6a\x6a\x37\xd8\xa3\x97\xe1\x6f\x72\xc4\x78\xb8\xf3\xe7\x39\x7b\x52\x3d\x4b\xea\x5d\xe8\xc1\x8d\x0f\x2b\xf5\x13\xab\x7a\xbd\x41\xb3\x80\x5a\x35\x28\x79\x6d\x68\xa4\x41\x89\xd3\xcb\xa7\x91\x4e\xee\xfc\x59\x30\x04\xd6\x92\x30\xb1\xeb\x6c\xb0\x04\x6e\xad\x1f\xee\x5c\x37\xb3\xbe\x71\x89\xf2\xd9\x74\x79\x72\xbf\x1b\xf6\x54\x57\xa9\x43\x68\x42\xce\x8b\x6d\xe0\x93\xf8\xf3\x1d\x7f\xc2\xf1\x3b\x07\x4c\x3a\x3b\x1c\x4d\x4c\xbe\xd4\x84\xd4\x2c\xd3\xac\xbd\xe7\xfa\x7f\xd0\x84\x2f\xe2\xec\xdb\x24\xe1\xcb\xe3\xff\xa2\x08\xed\xea\xd7\x05\xe1\x7d\x3e\x73\xf3\x7c\x9b\x1f\x6e\xff\x72\x7e\x7c\xf8\x26\x4d\x38\x49\x9f\x93\x47\xc3\xe6\xfc\x49\x0f\x5c\xad\x5e\x33\x4c\x13\x4e\x5e\x4b\xa9\x3b\x41\xdc\x3f\x49\x9f\xa0\x0f\x16\xf5\x6c\xc4\xa9\x51\x7f\x44\x5d\xe3\x1e\x1c\x41\xdf\x42\x4d\xda\xb5\x7a\xb5\xcf\x33\xa4\x8d\xd0\x76\xe4\x7d\x33\xab\x66\x4f\x5e\xe7\x3b\xf5\xcc\x16\x0b\xe9\xc5\x45\x75\x1a\x8e\x0e\x9a\xd7\x60\x37\xf6\xb0\x06\x5c\x0b\x16\xb0\x9b\xd8\x05\xf5\x1a\x70\x67\x2f\xed\x6f\x7c\xb6\x78\x7d\x60\x2f\xd6\x08\xe2\x39\x70\x55\x49\xef\x72\x26\x7a\xf3\x45\x35\x05\xcd\x66\x35\x67\x54\x9f\xbb\x3a\x6f\xc1\xcd\xd4\x4b\x9b\xc1\xc8\x07\xec\x63\x3d\xee\xe8\x39\x58\x29\x97\xc9\x3b\xf4\x43\x92\x3e\xb5\x1c\x9c\xbc\x76\xd7\x7b\xff\x3f\x4b\x47\x29\xb7\x2a\xcd\xe5\xac\xff\x57\xbf\x3f\xa9\x5f\x9d\xa5\xa5\x8d\x8f\xb2\xe7\x15\x39\x06\x6f\x27\xad\x49\x1d\x5f\xd4\x5f\x99\xf6\xdf\x5e\xeb\x0d\x3a\x81\x3a\x67\xf9\xad\xf8\x2c\xc1\x73\xcb\x7c\x5d\xb9\x0e\xb4\x5a\x33\x29\xef\x1a\xc7\xc9\xbc\xc7\x5f\xba\x09\x2d\x8a\xbf\x7b\xe5\x0e\x71\x0b\xea\x49\x1b\xe9\xa5\x4a\xfa\x70\x51\x9f\x46\xdf\x48\xbf\x8a\x6f\xc0\x05\x39\xdc\x49\x97\x60\x83\xfd\x9d\xbd\x57\xc4\xbf\xf8\x16\xee\x31\xfd\x32\x79\x9c\xf8\xad\xcd\xdc\x92\xe3\x80\x3a\x60\x73\x96\xca\xd7\xb3\xfe\x26\x79\x6c\xac\xc7\xe8\xfd\xac\xd4\x6d\x70\xce\x6f\xe1\x70\x70\x4f\x1c\x47\xe9\x62\xce\x63\xb8\x4c\x8e\x25\xfc\x08\x07\x04\xf5\xdd\x95\x66\x42\xf8\x79\xd5\x2c\xc9\xea\x8d\x7a\x6c\x9e\xc7\x47\xe4\x4f\x10\x97\x72\x26\xeb\x13\xa4\xa9\x2a\xf9\x75\xef\x7b\xe8\x11\xe0\x4f\xf6\xe8\x82\xd7\x40\x72\x87\x9e\x6a\xdc\xe7\x1d\xe9\x15\x03\xc4\xd9\xd6\x53\x1f\x82\xbd\x3c\x53\x0b\x57\xd4\x9b\x59\x7d\xfc\x22\x5d\x63\x3a\x7b\x74\x3e\x85\x2f\xad\x0f\xef\x3d\x8f\xb2\xea\x0b\xfc\x6b\x1c\x2c\x6d\x60\x33\x8f\x41\x7a\x7c\x15\x8e\x65\x17\x58\xa0\xb7\x42\xcf\x9a\x8e\xd3\x8c\x14\x9c\xd7\xea\x3b\xf1\x31\x7a\xc0\xe6\x3b\xaa\xe1\xad\x62\x53\x6b\xe6\xd9\x4a\xe3\xf4\xe2\x26\xd6\x21\x67\x6d\x36\xd9\xb9\x3d\xf4\xf5\x16\xbb\xc5\xe7\xb7\x36\x97\x1a\xbc\x77\x01\x5b\x8b\x72\x73\xd1\xbc\x01\x0e\x03\x8b\xab\xe6\x85\xd8\x88\xff\x6c\x3f\xf5\x80\xe0\xc8\xb8\xa4\xf7\xfc\x33\x5d\xda\xaa\x87\x5d\x3c\xdf\xd1\x5b\x9b\xfa\x2c\xeb\x01\xa4\x4d\xa9\xed\xe8\x5c\xfc\x83\x5e\x20\x9f\xc9\x35\x9b\xab\x8e\x5e\xcb\xc1\x2d\xb1\xab\x84\x99\x59\xf3\x3e\xf2\x2e\x68\x9e\x69\xbd\x58\x2b\x0d\xb6\xeb\x79\x71\x1d\xfe\xde\x6b\x7f\x90\x5e\xe0\x6c\xa6\xc3\x47\xcd\xdf\xa5\x6d\x76\x6c\x75\xd2\x16\xe0\x61\xaa\x5e\xe7\x1b\xc4\x8b\x75\x1a\xcd\x4f\x9a\xda\x7b\x1f\xe2\x40\x5e\xdb\x5c\xbc\xf3\x5e\xae\x55\xbf\xd4\xee\x73\xb5\xbd\xaf\x54\x9f\x36\xd5\x8e\x2d\xd6\xc7\xa6\x51\xf5\x04\xfc\xb2\x37\x79\x8b\xbe\xdd\xc4\xfd\x70\x2d\x7c\x6f\x73\xb3\xcd\x31\x62\xf6\x8d\xd2\xd8\x95\xeb\x07\xce\x56\xa9\xa6\x57\xea\x79\x58\x7b\xd0\xac\xda\xf4\xe7\x9b\x7d\x89\x07\x1a\x60\xd5\x79\xb8\x87\x2f\xe0\x60\x74\x03\x39\x43\x3c\xb3\xe6\x80\xb5\x78\x9a\x1a\x85\x9f\xb6\xca\x73\x06\x4e\x61\x4f\x72\x0f\xad\x4b\x7d\x62\x4f\xf4\x27\x67\x99\x75\x16\xea\x1e\x79\xd3\x6a\x76\x95\x95\x2f\xad\x66\xbb\xc4\xc4\xfa\xe2\xca\x71\x67\x35\x61\x94\xf6\x17\x0f\xd1\x4f\x90\x77\xd4\x38\xab\x73\xc9\x39\x99\xfd\xac\x1f\xac\x35\xd7\x5b\xdc\x66\x62\x3c\xef\xb3\xed\x5a\xda\xaf\xf3\x35\x2a\xcd\xeb\xd0\xf8\x36\x9f\xac\x5e\xe7\x25\x8b\xf0\xb0\xd7\xf0\x2f\x35\x8e\xf5\xe6\xc9\x6b\xe1\xa0\x9e\xb4\x1a\xbf\xaa\x71\xbe\xd4\x1b\xff\xbd\xcc\xf9\x72\x85\x17\xa5\xf3\xe6\xc6\x0d\x37\xfe\x8d\xd8\xf9\xfc\xe7\x6f\x17\x3b\xf6\x72\xab\x93\x38\xdf\xbc\x71\x24\x71\xac\x40\x0c\x6f\xc4\x4e\xe7\x80\x01\x58\x79\x27\xf6\xda\x87\xaf\x36\x78\x6a\x14\x98\xd6\x03\x65\xc4\xdd\xfa\x27\x0b\x34\x10\xbd\x35\x17\xad\x07\x26\x48\x50\x98\x30\x6e\x9d\x30\x16\xbd\x78\xe9\x25\xee\x21\xe8\x76\x6f\x5a\x1a\xbd\x04\x11\x71\x00\x24\x9a\xab\x59\x4d\x0a\x80\x9b\x35\x74\x25\xd8\x9c\x3f\xe8\x25\x8a\x09\xdc\xfc\x3a\x30\x63\xaf\x56\xc5\x0e\x42\x1d\xd7\xd7\x61\x05\x64\xc0\x1e\x49\x09\x08\xf8\x6c\x68\xbe\xf8\xf9\x07\x0d\xdf\xb7\xfd\xa5\xc4\x24\xb0\x8d\xde\x2c\x8f\x1a\xca\x70\xbe\x7d\xa0\x47\xc2\x50\x78\x27\x35\xb2\x8d\x08\xd6\x92\x48\x0d\x0d\x45\xc3\x6c\x08\x6a\x42\xf7\x41\x5c\xeb\x04\x08\x81\x70\xee\x56\xc3\x23\x04\x1a\xa4\x04\x29\x42\xb4\x36\xc0\x09\xbe\x97\x01\x59\x43\x28\x7c\xc2\xde\x90\x30\xe7\x26\x99\x47\x15\x2a\x88\x06\x1f\x42\x20\x34\x63\x41\x03\x7e\x7b\x41\x51\x3b\xd9\x0d\x6a\xe2\x17\x0d\xb6\x46\x15\x59\x6b\x28\x25\xa8\xb0\x8d\xf8\x43\x12\x14\xbe\x41\x71\x32\xd2\x99\x9d\xf4\x7b\x0d\x81\xec\x05\x48\xe7\xf6\x1b\x39\x65\x4f\x76\x0a\x02\x7b\x6c\x7a\x41\x09\x99\xcd\x7a\xd1\x89\x1f\x86\xf6\x95\x18\x5a\xbd\x24\x82\x10\x82\x5e\x5c\xe1\x17\xe2\x69\xff\x6f\xf2\x71\xef\x84\xb6\xa8\x40\x4d\x1a\x56\x21\xac\x53\xf0\xf3\xef\x38\x83\x90\xc1\xc1\xb8\x0f\xd2\x83\xfb\xa8\xd5\x8b\x44\xd6\x19\xff\x19\x00\x00\xff\xff\xff\x86\xa4\x90\x00\x20\x00\x00")

func res_res_go() ([]byte, error) {
	return bindata_read(
		_res_res_go,
		"res/res.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"res/doc/sample.txt": res_doc_sample_txt,
	"res/doc/usage.txt": res_doc_usage_txt,
	"res/messages_en.json": res_messages_en_json,
	"res/messages_zh.json": res_messages_zh_json,
	"res/res.go": res_res_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"res": &_bintree_t{nil, map[string]*_bintree_t{
		"doc": &_bintree_t{nil, map[string]*_bintree_t{
			"sample.txt": &_bintree_t{res_doc_sample_txt, map[string]*_bintree_t{
			}},
			"usage.txt": &_bintree_t{res_doc_usage_txt, map[string]*_bintree_t{
			}},
		}},
		"messages_en.json": &_bintree_t{res_messages_en_json, map[string]*_bintree_t{
		}},
		"messages_zh.json": &_bintree_t{res_messages_zh_json, map[string]*_bintree_t{
		}},
		"res.go": &_bintree_t{res_res_go, map[string]*_bintree_t{
		}},
	}},
}}
