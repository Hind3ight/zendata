package res

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _res_doc_sample_txt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xcd\x6e\xd3\x40\x14\x85\xf7\x79\x8a\xbb\x60\xeb\x54\x59\x74\xcb\x13\xb0\x41\x7d\x00\xe4\xc6\x53\x35\x92\xed\x01\x3c\x96\xdc\xae\xa2\x28\x6d\x52\xea\x90\xa2\xfe\x08\x39\x48\xa5\xa8\x86\xb2\xc8\xd0\x15\x72\xfd\x03\x0f\x93\xb9\x33\xee\xca\xaf\x80\xec\x81\x86\x50\x16\xfc\x78\xe1\x59\xcc\x9d\x7b\xbe\x73\x0e\xc0\x83\x87\xbb\x56\x9b\x04\x04\x8c\x6d\x90\xe7\xb1\x7a\x73\x28\x8a\xaf\xea\xe4\x0a\x13\x8e\x2f\x3e\x2e\xfa\x83\x56\xeb\xe7\xa1\x1d\xb0\x88\x43\xd7\x18\xf1\x58\x7b\xc7\x74\x6c\x30\xba\xd0\x59\x07\x63\xab\x47\x6c\x0b\x9a\x7f\x07\x0c\xaa\xa7\xa8\xcf\x9e\xfa\xac\xcd\x02\x06\xc6\x16\x30\x12\xb0\x16\x2c\x3f\x79\xf0\xa1\xbc\x08\xe5\xe9\xb5\x9c\x70\x75\x72\x2e\xc7\x47\xf8\xaa\x10\xd9\xe5\xa2\x3f\xd0\x08\xb7\x7b\x13\x55\x70\x79\x36\x12\xd9\xe7\x55\xd5\x2a\x0f\xf5\x8b\xce\xfa\xdd\x8a\x2a\x0f\x45\x16\xd7\x22\xf2\x6d\x8e\xf9\x54\x45\xc3\xf2\xcb\x31\x8e\x52\x1c\x5f\xff\x42\xa3\x57\x8a\x64\xfe\x7f\xf6\x7a\xae\x47\x9e\xb3\xb6\xf7\xcc\xae\xed\x35\x07\x03\x66\x6e\xda\xe4\x89\x6b\x3a\xe4\x4f\xbd\x66\xf1\xc6\xe3\x47\xe5\xa7\x39\x4e\x63\x2c\xde\x61\x3e\x5d\xc5\x5e\xaa\xdc\x61\x57\x79\x58\x5e\x5c\xe1\xd1\x44\x24\xe9\x52\xef\x9e\x19\x4b\x63\x6e\x9a\x1e\xf9\x6e\xe6\x1f\xdb\xfb\xab\xd6\x7e\xd7\x57\xf9\x7e\x5f\xcd\xce\x6e\xb3\xd7\x25\xbf\xd4\xad\x36\xf7\x5d\xea\x38\xd4\x6d\x26\x44\x32\x57\xd1\x10\xf7\xf7\x90\xdf\xdc\x33\xd2\x83\xc0\xa2\xdd\x66\xdd\xda\x2e\x71\x99\x49\x75\xe8\x14\xa8\xbf\x02\x27\xb2\x97\x32\x1c\x21\x8f\x54\x34\xd4\x88\x98\x1e\x6f\x74\xb7\x89\x63\x56\x79\x88\xe3\x19\x66\x69\xad\x86\x3c\x12\x37\x07\x9a\xb4\x0e\xf3\x47\xe0\xd4\x67\x6a\xc6\xb1\x38\x15\xc9\xe1\xa2\x3f\xf8\x16\x00\x00\xff\xff\xdf\x32\x28\xff\x1e\x03\x00\x00")

func res_doc_sample_txt() ([]byte, error) {
	return bindata_read(
		_res_doc_sample_txt,
		"res/doc/sample.txt",
	)
}

var _res_doc_usage_txt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x92\xdb\x52\xda\x4e\x1c\xc7\xef\x7d\x8a\xbd\xf9\x5f\xae\xdc\xfc\xa7\x17\x7d\x1b\x94\x50\x6c\x03\xb1\x66\xad\x87\xab\x80\x1c\x44\x83\xb1\x15\x3c\x50\x54\x70\x40\x69\x67\x48\xe8\x74\x2a\x21\x01\x7c\x18\xf6\xf7\xdb\xe5\x8a\x57\xe8\x84\xb5\xca\xb4\x77\x39\x7c\xbe\xa7\x9d\x25\x84\xa6\x08\xa5\x29\x4d\xdf\x24\x04\x6f\x3b\xa2\x71\x0c\xbe\x0b\x47\xdf\xf8\x53\x0b\xb3\xde\xd4\xca\xad\x10\x42\x4d\x42\xa9\xa9\x31\x42\x88\x74\x27\x62\xec\xc2\xa0\x03\x85\x81\xf4\x7a\xb2\x6b\xc1\x8f\x1b\xb4\x1e\xa6\x56\x4e\x54\xbb\x78\x38\x00\x6f\x08\xe3\x33\x28\x57\xc4\x57\x17\xc6\xb5\x59\xc3\x92\xf7\x59\x6c\x94\xa1\x78\x85\xd7\x07\xb3\xab\xd3\xc8\x72\x85\x90\x59\x78\x29\xdd\x36\x36\x87\x58\x71\xc1\xad\xf3\x61\x19\xcf\x4b\x3c\x7c\x14\xd5\x5b\x3c\x3c\xc5\x5a\x1f\x2b\xae\x4a\x27\x84\x26\x08\xa5\x09\x2d\x19\xdf\xd6\xd9\x1f\xe5\xb2\x46\x41\x7b\x84\xd2\xbd\x78\x5a\x8f\x5e\x08\xda\x25\x70\xeb\xff\x42\xeb\x84\xd2\x75\x63\x3b\xc3\x5e\xa1\xe5\x44\x51\xcf\xe3\x75\x0b\x6b\xfd\x05\x1d\x09\x68\x72\x43\xd3\x13\xd1\xa3\x9a\x22\x27\x67\x50\x0a\x44\x3d\x0f\xbd\x0b\x74\x7f\xcd\x47\xb6\xa8\x76\x67\xd6\x05\x38\x03\x38\x2c\xce\xea\xd5\xa9\x95\xc3\xc6\x77\x65\x8d\x17\x8f\xf3\x91\xad\x0a\x2b\xe1\xa2\xa1\x2a\xc4\xfd\x5e\x14\x57\xb6\xa2\xd3\x59\x98\xbd\xec\x35\x08\xa5\xc6\x36\x23\x4b\x53\x94\x7c\x79\x4a\x32\x2a\x67\x6c\xa5\xe3\x0b\xee\xf9\x7f\x73\x04\x23\x67\x3e\xb2\xb1\xea\xa1\x9d\x65\xda\x2e\x9b\x5a\xd9\xf7\xa6\x91\x99\x5a\xd9\xdd\xb4\x0e\x5f\x6c\xf3\xa3\x2e\xbd\x1e\x38\x9d\x97\x66\xdc\x0f\x14\xf8\x9c\xce\x08\xa5\x2c\xbe\xa6\x6b\x7f\xfb\x46\x60\xf4\x5d\xcd\x12\xd5\x2e\x0f\x4e\x54\xbb\x8d\x8c\xa9\x6d\x31\xe5\x2b\xea\x79\xd9\xea\xc2\x69\x45\xb9\xd1\x4f\xda\xd6\x9a\x61\x2e\xcc\xe0\xee\x06\x8e\x9a\xd8\x6b\x83\x93\xc3\x5a\x3f\xea\x79\x39\x11\xed\x40\x7a\xf7\x22\x2c\xca\xfe\x81\xf4\x6a\xaf\x17\x6f\x85\x10\xee\x07\x3c\x28\xe2\xf9\x90\x4f\x9e\xa0\xd1\xe5\x61\x88\x79\x47\xdd\x2c\xee\xf7\xb0\xfc\x20\x5b\xf6\x7f\x26\x7c\x1e\xf3\xb0\x3d\x1f\xd9\x10\x06\xd2\x75\xa1\x5f\x84\xc2\x23\x1c\x35\xa1\xd0\x11\x27\x1e\xdc\x1d\x80\x73\x39\x2b\x39\xdc\xef\x45\x4c\x61\xc0\xc7\x67\x78\x3e\xc4\x9f\x35\x70\x72\xa2\xf0\xc0\xc3\x0e\xf7\x8f\xa1\xd1\x87\x6b\x4b\x1d\x42\x8a\xb1\x4d\xf3\x6d\x2c\xb6\xb3\xb3\xb3\xba\xcf\x34\x93\x6d\x64\xde\xad\x66\x34\x16\x5b\x33\x8c\x0f\xb1\x7d\x96\xa4\x09\x63\x3d\x16\x4f\x24\x28\x33\xe8\x66\x9c\xa5\xe8\xff\x6f\x56\x53\x2c\xad\xff\x0e\x00\x00\xff\xff\xf0\x10\x25\x34\x4f\x03\x00\x00")

func res_doc_usage_txt() ([]byte, error) {
	return bindata_read(
		_res_doc_usage_txt,
		"res/doc/usage.txt",
	)
}

var _res_messages_en_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x41\x6f\xdb\x30\x0c\x85\xef\xf9\x15\x84\x81\xa0\x97\x2c\xc0\xb6\x9b\x8f\x2b\xba\x61\xc0\x2e\x6b\xd7\xd3\x3a\x08\xaa\x4c\x3b\x02\x1c\x2a\x15\xe9\x25\x41\xd1\xff\x3e\x50\xb6\xb7\x62\x88\x6c\x6f\x97\x1c\xcc\x4f\xef\x89\x8f\x62\x9e\x57\x00\x45\x6b\xa9\xe9\x6c\x83\x45\x09\x05\xd2\x9b\xfb\xbb\x62\xa3\x9f\xf7\xc8\x6c\x1b\xe4\xa2\x84\xef\x2b\x00\x80\xe7\xf4\x0b\x50\xf8\x4a\xd1\x4e\xab\x09\x4d\x1f\x25\x5a\xe2\xd6\x8a\x0f\xa4\xd5\x7b\xad\x96\x45\xaa\xbe\x6c\x2e\x9d\xc7\x93\xdd\x1f\xda\xbc\xc2\x4d\x5f\x9f\xd4\xa8\x43\x34\x73\x3a\xb8\x6d\xb6\xb0\xe6\x29\x19\x09\x62\xdb\xac\xc0\xb7\x54\x1d\x8f\x5f\x3a\xff\x88\x8d\x27\xe3\x02\xd5\xbe\xc9\xca\x7c\x50\x08\x24\x40\xcf\x6d\x40\xce\x07\x84\x2b\x3c\x79\xb9\xd2\xcf\x4f\x9d\x97\xed\x64\x60\x24\x18\xcd\xef\x69\x65\x73\x53\x0c\x64\x87\x30\xa2\x70\x0e\x1d\x1c\x2d\x89\xda\x74\x8c\xe5\x03\xbd\xdd\xc2\x0d\x35\xad\xe7\x1d\xac\xf9\x81\xde\x6d\xe1\x7a\xe7\x09\x19\x67\x92\x72\x5d\x8c\x48\x32\xd7\xeb\x75\x8f\x0d\xad\x96\x93\xe1\x71\xe7\x1c\x32\x1b\x09\x26\xa2\xad\xb2\x9a\x03\xa7\x3d\x28\x07\xb5\x6f\xe7\x6e\x5b\x5b\xdf\x8e\xba\x46\xf9\xac\xf8\x47\xeb\xdb\xbf\x95\x27\x87\x31\x4a\x1f\x6c\x64\x5c\xa6\x9d\xd0\x34\x18\x17\x48\x34\x9e\x50\xff\x87\x57\xb4\xa4\x5b\x99\x73\x5b\x33\x78\x06\x0a\x02\xb7\xc8\xb7\x89\x85\x3a\xc4\xbd\x95\x0d\x48\x3c\xff\xb9\x88\x65\x25\x3e\x13\xcb\x2b\xf7\x4b\xf6\x0d\x12\x46\x2b\x68\x22\xba\x10\xab\xbc\xf5\xa7\x01\x84\x75\x05\x03\xab\x76\x43\x8b\x1b\xe0\x03\x52\xa5\x45\x46\xb7\xac\x63\x17\x88\xd0\x89\xe1\xa7\xd6\x4b\x3e\xe1\x7a\x48\x38\x1c\x90\xe0\xee\xeb\x17\x2f\xbd\x21\xc6\x18\x62\xb9\x34\x5e\x3c\xa1\x33\x4f\x1d\xc6\xf3\xac\x91\xa2\x90\xd0\x7f\x9c\x5d\x38\xce\x6a\xf7\xd3\xe9\x3b\x7e\x0f\x31\x1c\x97\x5a\xb0\xfd\x89\x06\x4f\x0e\xf3\x7f\x65\xa3\x87\xa2\x90\xd0\x12\x16\xcd\x21\xa2\x3e\x00\xb1\x8f\x13\xef\x7c\x14\xef\x61\x48\xf0\x32\x79\x4f\x8c\x51\x4c\x65\xc5\xce\xaa\xf7\x2c\x28\x3b\x23\xee\x5b\x34\x6e\xa7\x1b\x60\xc4\xef\x27\xee\xad\xef\xb3\x07\x41\x41\xdd\x9f\x65\x0b\x71\xb6\xfb\x7c\xd6\xaf\xb7\x41\xc1\xb4\x07\x0c\x9e\xf2\xbb\xb0\x02\xf8\xb1\x7a\xf9\x15\x00\x00\xff\xff\x44\x3d\xa9\x66\x95\x07\x00\x00")

func res_messages_en_json() ([]byte, error) {
	return bindata_read(
		_res_messages_en_json,
		"res/messages_en.json",
	)
}

var _res_messages_zh_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\x5f\x4f\x1a\x4b\x18\xc6\xef\xf9\x14\x13\x12\xe2\x0d\x31\x39\xe7\xd2\xfb\x73\x71\x92\x73\x73\xec\x65\x6d\x36\xe3\xf2\x82\x9b\x2c\xb3\xba\xb3\xb4\x58\x63\xb2\x31\x35\xa2\x40\x35\x05\xc4\xfa\xa7\x68\x5b\xaa\x6d\x02\x8b\x89\xb1\x2b\x2e\xf8\x61\xba\x33\x0c\x57\x7c\x85\x66\x17\x35\xda\xb0\x0b\xd1\x1b\x12\x66\xde\xfc\x9e\x79\x9e\xf7\x7d\x77\x25\x82\x50\x54\xc5\x24\x95\xc1\x29\x88\xce\xa0\xe8\xdb\x85\x68\xdc\x3b\x4b\x03\xa5\x38\x05\x34\x3a\x83\x5e\x46\x10\x42\x68\xc5\xff\x45\x28\xaa\x24\xbc\xba\x8c\x77\xeb\x97\xfa\x87\x86\x8e\x09\x55\xb1\xa1\x68\xc4\xbb\x65\x76\x93\x6d\x7d\x1f\x38\xfb\x51\xbf\x60\x35\x3e\x0a\x01\x59\x9c\x5e\x54\x83\x21\xae\xdd\x75\xbb\xf9\x31\x90\xa4\xa6\x4b\x63\x41\xdd\x3c\xfb\xb6\x86\x62\x34\x0c\x34\x0f\x29\x85\x48\xb2\x46\x92\x4a\x2a\xd8\x97\x63\xb2\xd3\x7c\x7f\xbd\xd8\xeb\x34\xe3\x48\x74\x4b\x6c\xbd\x3e\x05\x59\xc5\x98\xea\x9b\x26\xdb\x68\xff\x32\xd7\x42\x1d\x13\x03\x74\xe9\x3e\xee\x20\x15\x61\xfd\x1c\xa2\xdd\xce\x31\x3f\xac\xf1\xc3\x03\xb7\x73\xd3\x2b\x9f\xf5\xf6\xdf\x09\xab\x21\xce\xcc\x99\x39\xf2\xd7\x34\x12\xf9\x73\xbe\xbb\x81\x62\x74\x8e\xfc\x3d\x8d\x5c\xbb\x31\xfc\x17\xf6\x00\x39\xa3\xeb\x40\x8c\xb1\x36\x3b\x25\xb6\x59\x1c\xda\x7c\x98\xff\x28\x24\xcd\xc8\x32\x50\x2a\x19\x9a\xa4\x03\x4e\x84\x98\xba\x66\xdb\xbb\x7c\x77\xc3\xbd\xbe\x8c\x51\x9e\xdb\x61\x5b\xb5\x31\x71\x25\xb1\xa2\xde\x71\xa5\xa4\x12\xd2\xe1\xc7\x70\xf6\xf5\x5c\x5c\xd4\x27\x84\x2f\x62\x9d\xc2\x18\xfa\xe9\x17\xfe\x69\xe7\x19\x74\x1d\x13\x6f\x95\x82\xf8\x31\xea\xda\x45\xbe\x67\xcd\x02\x9d\xf5\x2b\xf9\xb1\xc3\x9c\xed\x81\x53\x60\xad\x23\x61\x55\x86\xfa\xae\xdd\x9e\x05\xfa\x2f\xa1\x06\x65\xd6\x95\x38\x3f\x79\xf8\x84\x51\x6f\x48\x01\x01\x1d\x1b\x20\xe9\x20\x6b\x7a\x22\x58\xbf\x57\xae\xf1\xdc\x4e\x2c\xe1\xda\x3f\x44\xb3\xc5\x3a\x15\x96\x6b\xdd\xb9\x1d\x38\x05\x61\x56\x79\xf5\x32\x96\xe8\x9d\x7e\x98\xd0\xb5\xac\x11\x02\xb2\x21\xd1\x25\x55\x31\x82\x73\xe5\x9b\x25\xe6\x98\x2f\xfe\xff\x4f\x31\x80\x57\x5a\xbc\xd8\x64\xed\xd2\x5d\xc0\x03\xa7\xd0\x2f\x7f\x14\x96\x35\x70\xf6\x63\x74\x42\x61\xc8\x82\x2c\x2d\x65\x40\x5f\x0e\x14\xbd\x95\xab\xd5\x85\xf5\xf9\x5e\x49\x58\x0d\xb6\x5d\xf7\x95\x9e\xa4\x7b\xdb\x66\xed\xcd\x18\x59\x71\x52\x18\x36\xf3\x0f\x8f\x13\x0b\x51\xfc\x1a\x24\xc8\xca\xa0\x06\x7f\xed\x6e\x8e\x58\x63\xef\x1f\xaf\xe6\x19\x49\xca\x3a\x78\xa3\x63\xe0\xf9\x90\xc5\x60\xb9\x03\x76\xdd\x16\x27\x67\x4f\x6b\x9a\xa2\x82\x24\x2f\x78\x13\x2f\x19\x4a\x3a\x64\x4e\xfc\x59\x74\x6f\x9a\xbc\x7c\xc5\xab\x97\xfd\xea\x85\x6b\xb7\x1f\xe3\x43\xe7\x7f\x19\xa7\x83\xe3\x7a\x30\xfc\x5e\xdd\xad\x56\xfb\x7d\xef\xa0\xc9\x3a\x15\x6f\x35\x1b\x71\x34\x72\x05\x22\x08\xbd\x8a\xac\xfe\x0e\x00\x00\xff\xff\x1f\x94\x8c\xc0\x42\x07\x00\x00")

func res_messages_zh_json() ([]byte, error) {
	return bindata_read(
		_res_messages_zh_json,
		"res/messages_zh.json",
	)
}

var _res_res_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x99\x4b\x6f\x1c\xc9\xf1\xc4\xcf\x33\x9f\x62\xfe\x04\xf6\x0f\x12\x10\xb8\xfd\x7e\x2c\xa0\xcb\x2e\x7c\xf5\xc1\x57\x97\x41\x54\x77\x57\xc9\xb4\x97\xa4\x3c\x43\xae\x6b\x65\xec\x77\x37\x7e\x99\xd1\x12\x2d\x09\x0b\x58\xf0\x61\x44\xcd\x74\x77\x3d\x32\x23\x23\x22\xab\xdf\xc7\xf5\xef\xf1\x5d\x3a\x9d\xd3\xe5\x78\xbc\x7f\x78\xff\x74\x7e\x3e\x5d\x1f\x0f\x57\xcb\xaf\xcf\xe9\x72\x75\x3c\x5c\xad\x4f\x0f\xef\xcf\xe9\x72\xf9\xfe\xdd\x87\xfb\xf7\xfc\x90\x1f\x9e\xf9\x73\xff\xc4\xbf\x97\xe7\xf3\xfd\xe3\xbb\xcb\xd5\xf1\xe6\x78\xcc\x2f\x8f\xeb\x69\xb9\x7f\xdc\xe2\x73\xbc\x3b\xa7\xb8\x5d\xf3\xbf\xd3\x9f\xff\xc2\x58\x6f\x4e\x8f\xf1\x21\x9d\xfc\xfe\x9b\xd3\xf5\xfe\x6b\x3a\x9f\x9f\xce\x37\xa7\x7f\x1d\x0f\xef\x3e\xd8\xb7\xd3\x0f\x6f\x4f\x4c\x75\xfb\xc7\xf4\xcf\x3f\xa5\xb8\xa5\xf3\xb5\xad\x85\xef\x3f\xbe\xe4\x9c\xce\x36\xec\xcd\xcd\xf1\x70\x9f\xed\x81\xff\x7b\x7b\x7a\xbc\xff\x99\x21\x0e\xe7\xf4\xfc\x72\x7e\xe4\xeb\x9b\x53\x7e\x78\xbe\xfd\x03\xa3\xe7\xeb\x2b\x06\x3a\x7d\xf7\x8f\x1f\x4e\xdf\xfd\x72\xe5\x2b\xb1\xb9\x6e\x8e\x87\xdf\x8e\xc7\xc3\x2f\xf1\x7c\x5a\x5e\xf2\xc9\xe7\xf1\x49\x8e\x87\x3b\x5f\xce\xdb\xd3\xfd\xd3\xed\x4f\x4f\xef\x7f\xbd\xfe\xff\xe5\x25\xbf\x39\xbd\xfb\x70\xc3\x5a\x6f\x7f\xfa\xf9\xe9\x92\xae\x6f\x8e\xff\xbb\x65\xe8\xa9\xe5\x25\xdf\xfe\xc8\x4a\xae\x6f\xde\x30\xc4\xf1\xb7\xe3\x91\x15\xde\x9d\xd3\xe5\x6e\x7b\x5a\xef\x2e\xf1\xe1\xfd\xcf\xe9\xee\xb9\x3c\x9f\xde\x2a\xba\xd7\x57\xa1\xd4\x39\x94\x69\x09\xa5\x9a\x42\xa9\xaa\xaf\x7f\x72\x0e\x25\x76\xa1\xcc\x75\x28\xeb\x16\xca\x90\x42\xd9\xda\x50\xba\x2a\x94\xba\x0b\x65\xea\x43\xc9\x63\x28\xe3\x1c\xca\x14\x43\x59\x96\x50\x86\x2a\x94\xb4\x84\xd2\x77\xa1\xf4\x73\x28\x63\x17\xca\xba\x84\x52\xb7\xa1\x2c\x55\x28\x5d\x1d\xca\xb8\xf9\xf8\x89\x6b\x43\x28\x7d\x1b\x4a\xdb\x87\x32\x37\xa1\x24\xae\xd5\xa1\xb4\x6b\x28\xf3\x10\xca\xb6\x86\x12\x53\x28\xb1\x09\xa5\x99\x42\x19\xb6\x50\x7a\xee\x8b\xa1\xcc\x95\xff\x9e\x93\xef\xa3\x9d\x43\xe9\xa6\x50\x62\x1f\x4a\x9c\x42\x99\x86\x50\x96\x26\x94\x75\x0a\x65\x63\xcd\x7d\x28\x23\xf7\x33\x47\x1b\x4a\x95\x43\x99\x59\xd7\x1c\x4a\xdb\x86\x92\x52\x28\x6b\x0c\x25\x12\x1b\xd6\xb7\x86\x32\xd5\x3e\x4e\xcf\xf3\x43\x28\x79\x0d\x65\x9c\x42\x49\xb5\xef\x6f\x65\x9d\x5b\x28\xe3\x12\xca\x92\x42\x19\x19\x97\x71\xaa\x50\xa6\x36\x94\x69\xf4\xb8\xf4\x43\x28\x33\xf1\xee\xfc\x33\xad\xbe\x17\xf6\x90\xb8\x87\xb8\x44\x7f\x9e\x7d\x4e\x5a\x07\xfb\x24\x4e\x55\xf4\x18\x4e\x29\x94\x26\x87\xd2\xf2\x37\x85\x92\xa3\xcf\xc3\xf8\xc4\x9d\xb1\x62\x1d\x4a\xbd\x79\xbc\xa7\x29\x94\xae\x0d\x65\x1b\x43\xa9\xa7\x50\x32\xeb\x9e\x7c\xbd\xeb\xe8\xf9\x19\xd6\x50\xda\x2a\x94\x25\x7a\x9c\xd8\x57\x35\x86\x32\xb4\xa1\xc4\x25\x94\x6e\xf4\x7b\xaa\x25\x94\x99\x35\x66\xbf\x5e\x91\x1b\xd6\x39\x7a\xbc\x57\xe2\xa9\x35\xc5\xd5\x31\x53\x35\xa1\x54\x83\xe7\x99\xf8\x31\x4f\xdd\xf8\xda\xf8\xde\x30\x77\x76\x0c\xe5\xca\xd7\xbe\xac\x9e\xcf\xd4\x87\x92\xe6\x50\x16\xb0\x41\xdc\xab\x50\x46\xe5\x90\xbd\xb3\x7e\xd6\x96\x27\x5f\x47\x5d\x85\xb2\xcd\xfe\x1c\xb8\x60\x5c\xf6\xc3\x58\xcb\xe8\x7b\x26\x86\x7d\xaf\xb1\xc8\xfb\xe0\xeb\xb1\xe7\x46\xbf\xb6\xf5\xa1\x34\xd1\xf1\x91\x7b\xaf\x93\x55\xfb\xda\x36\xcf\xcd\x7e\xbd\xeb\x7d\x1f\xc4\xb7\x01\x5b\x8d\xe7\x95\x3c\xe5\xd9\xeb\x80\x7b\xd6\xd6\xaf\x51\x0b\x6d\xed\xd7\xc1\x71\xbd\x86\xd2\x67\xaf\xb5\xae\x09\x25\xb2\xbe\xd1\xe7\x18\x3a\xc7\x36\xf1\xce\x83\xe3\x83\x5a\x60\xcf\xc4\x79\x01\xbb\x83\xd7\xe0\xaa\x3a\xa1\x7e\xa8\x25\xcb\x4f\x1b\xca\x30\xa8\x6e\x85\xa3\x69\x0e\x65\x60\x0d\xfa\xde\xe5\x50\x96\xcd\xef\x03\x1b\xe4\x29\xb5\x3e\x87\xc5\x71\x54\x5d\x25\xc7\x03\xf9\xda\xf8\x7f\xed\x18\xec\xb7\x50\xd6\x3e\x94\x3e\x79\x0e\xa8\x57\xae\xf5\xe2\x05\xb0\xc6\xb5\x7e\xf5\x9a\xd9\xea\x50\xba\x2e\x94\xa6\xf3\xdc\x5a\x2d\x0b\x37\x35\xf3\x2c\x3e\x0f\x6b\x06\x6b\xb5\xe2\xc8\xf7\x34\x38\x6f\x6d\x4b\x28\x79\x71\x6c\x6e\xc4\x25\x79\xfc\x99\x93\x7b\xf9\x4e\x4c\xc1\x1f\x79\x1b\x14\x2b\xcb\x51\x1f\xca\xc2\x18\x5d\x28\x71\xf3\xfc\x13\x3f\xf6\x41\xad\xb5\x93\x5f\x23\x87\xcd\xe0\x6b\x6d\x1b\x1f\x9b\xb5\x83\x31\xee\xe7\x43\xed\x6e\xd9\xf7\x0c\x7f\x6c\x8d\xd7\xe2\x2a\x5e\xda\x14\x57\xfe\x12\x7f\x30\x3b\xd6\xa1\xcc\xec\x73\x76\x2c\xa7\xc9\xb9\x94\xfa\x61\x5d\xd4\x4b\x33\x3a\x6f\xcd\xa3\xcf\x0d\x46\x1a\x30\x93\x1d\x4f\x6d\xe7\x6b\xa4\xb6\xe7\xc9\x63\x34\x64\xaf\x65\x70\x6e\x39\x16\x27\x18\x37\x4f\x9e\x53\xe2\x6b\x78\x98\x7d\xef\xf0\x1a\x3c\x0b\xfe\xdb\xd1\x31\x43\xcc\x97\xce\x39\x2c\xef\x38\xa8\x14\x13\x78\x20\x3a\x46\xe0\x2b\x62\x05\xa7\xae\xb3\xe7\x76\xaf\x39\xea\x91\x9a\x78\xad\x23\x7c\x88\x55\x2b\x1e\xe7\x3b\xeb\x36\x1e\xb6\xfb\xae\x76\x53\xf0\xa5\x72\x5d\x7f\xd5\x02\xec\x0a\xf8\xda\x43\x1c\x0f\x87\xaf\x28\xdf\x9b\xe3\xe1\x70\x75\x4e\x97\xef\xb7\xa7\xf5\x7b\xff\xf9\xf6\xb9\x3c\x5f\xbd\x39\x1e\x6e\xbe\x10\xcc\x97\x4b\x7c\xf7\xed\x7a\x49\xcd\xa2\x63\x60\x14\x6c\x93\x77\x6a\x87\x1c\xc2\x57\x60\x7d\x14\x87\x50\x77\xc6\x11\xd9\x6b\x17\x1c\xa1\x2f\xd4\x5c\x3d\xfa\x7d\x35\x9c\xdb\xb9\xfe\x18\x07\xb7\x1e\x7b\xf2\x68\x39\x1c\xbd\x0e\xd0\x2b\xe6\x00\xaf\x93\xee\x21\x37\xe4\x97\x67\xc1\x0d\x9c\x87\x76\x93\x7f\x72\x89\x56\x82\x3f\x70\x03\x9f\x81\x31\xb4\x77\x5c\xa5\x15\xaa\x0d\xf6\x02\x17\xb0\x66\xea\x80\x67\xa6\xce\x79\x79\x15\x5e\x46\xf1\x04\xcf\xa2\x83\xec\x01\x5d\xa4\xde\xb8\x37\x0e\x1e\x3b\xb4\xb9\x01\xff\x9b\xe3\xa1\x91\x1e\x82\xdf\x76\x71\x0c\x51\x23\x95\xc6\xa9\xa4\x3f\x9b\x70\x85\x57\xe0\x37\xab\xe7\xe4\xb8\x34\xcd\xde\xbc\x36\xe1\x50\xc6\x36\x2e\x9d\xfd\x03\xdf\xf2\x7d\xda\xf7\x0a\x8e\x1b\xd7\xf7\x95\xfb\x2a\x8f\x2b\x7e\x06\xbd\xcf\x9d\x73\x2d\x35\x08\x57\xae\xaa\x3d\x72\xc1\x5e\xc1\x2d\xfb\xa1\xbe\xc8\x2d\xb1\x45\xe3\xf1\x05\xad\xf0\xc1\x7e\x2a\xd5\x5d\x2b\x4d\x27\x76\x6b\xe7\x7f\xc9\xaf\xd5\x51\x2f\x1f\xd1\x3a\x6e\x8c\x8b\x66\xcf\x35\x79\x47\x0f\x19\x97\xb5\x6d\xaa\xd1\x45\xba\x8c\x17\xc3\xdb\xa0\x87\x5c\x9f\xa5\xdd\xdc\x4f\x8c\x37\xf1\x1b\x1f\x70\x62\xba\x5f\xfb\x7e\x88\x17\xf5\x0d\x57\xc3\x0b\x68\x37\xdc\x0b\x5e\x2c\xff\x9d\xeb\x60\xaf\xdf\xf8\x18\xcf\x47\xaf\x85\x66\x91\x16\x45\x8f\x27\x39\x6e\x5e\xe5\xb8\x9a\x43\x69\x36\x1f\xdb\x38\x72\x70\x8d\xe5\x59\xb0\x44\x6c\xbb\x41\x7e\x70\xf1\xe7\xe1\x4f\x6a\x82\xf5\x33\x8f\xf1\x9d\xbc\x9d\xf1\xa7\x74\x1b\x9f\xb3\xeb\x65\x7a\xf5\x2c\x7c\x0a\xef\x81\x23\xe2\x69\x9a\x54\xfb\x7c\xd4\x45\x5f\xfb\x3e\xc9\x09\xf7\x82\x23\xf2\x6b\x7e\xb0\x77\xcf\xc4\xba\x07\xc5\xd4\x7c\x53\xeb\x9e\x01\xee\x47\x9b\xe1\xc7\x46\x1c\x4d\x0d\x51\x5b\x78\x33\xd3\x89\xcd\x3d\x01\x7b\x60\x6c\xb0\x36\x4a\x87\xc0\x30\x5a\x0d\xcf\x8f\x83\x3f\x4b\x4c\x98\xd7\x30\xd3\xfa\x5f\xf4\x15\xcd\x42\x8b\x88\x3f\xf8\x9d\xe5\x1f\xc0\x0b\x75\x36\x80\xd3\xcd\x31\x44\x8c\xc8\xe3\xac\x9c\xb2\x16\x72\xb3\xf3\x31\xfb\xa7\xb6\xc1\x1d\xfb\x24\x26\xb5\x30\x68\xeb\x69\x7c\x8f\xe0\x06\x2d\x61\xed\xd4\x85\x79\x08\xe5\x72\x15\x86\x9a\xd6\x31\x42\x0d\x82\x4d\x70\x82\xbe\x80\x01\xe3\xf5\x28\x8d\x58\xfd\xb9\xa4\x5a\x4d\xd2\x70\x62\x61\xfe\xb8\xf3\xb1\xb8\x17\x0f\x01\x16\xe0\x2b\xf6\xcc\x7a\xe1\x0d\xf6\xb8\x6b\x26\xbe\x19\x3c\x80\x1f\xea\x83\xda\x9b\xa5\xa3\xfb\xef\x60\x7d\xd7\x2d\xf8\x94\x35\x10\x17\x72\xc6\x18\xec\x8b\xba\x25\xc6\x8c\x8f\xb6\x0e\xea\x2f\xc8\x19\x31\x81\x5f\x66\xc5\xff\x23\x57\xed\x7c\x36\x38\x56\xcc\x8b\x2d\x8e\x5d\x7a\x1d\xb8\xc2\x3c\xd0\x26\x1f\xd9\xfb\x7c\xe6\x0d\x5f\x71\x03\xf9\xc2\xf3\x93\x4f\xbc\x45\x2b\x5c\x5a\xae\xa2\xc7\xd1\x3c\x68\x74\x4e\x82\xa3\xf1\x8d\xf4\x26\xe6\x99\xb2\xc7\x03\xcc\x80\x41\xea\xd6\x3c\xf0\xea\xfa\x4c\x8c\xf1\xd9\x93\x7c\xd3\x36\xf9\x7a\xd1\x02\x7a\x1c\xab\x87\xe8\xfa\xbc\xcf\x07\x5f\xd7\xb5\x7b\x46\x74\x01\xce\xcb\xf2\xb1\x86\xc3\xe8\xfe\x73\xe7\xc4\x41\x3d\x09\xb8\x83\xdf\xe0\x9c\x7a\x9f\x7b\x74\x8e\x80\xe7\x52\xe3\xf9\x86\x8f\x3a\x79\x3b\x38\x76\xd3\x9e\x59\xbb\x71\xf1\x2c\x6e\xdf\x7c\x3e\xc3\xc9\xe8\xbd\x01\x3a\xd8\x54\xce\x3f\xe6\x7d\xb3\xf3\x8b\x71\x93\xbc\x09\xf7\x51\x73\xe6\x09\x67\x5f\x0b\x31\xd8\xb9\x00\x2c\x81\x05\xf8\x81\x98\x82\xb9\x5a\xd8\xe6\x9a\xf5\x84\xb5\xd7\x72\x2d\xfd\x85\x03\xd0\x52\x70\x4a\x7c\xc8\x0f\x7f\xb9\x96\xe4\xf7\x3b\x79\x5c\x7c\xde\x2a\x1e\x30\xee\x4f\x5e\x67\x73\xf6\x39\xac\xc7\x68\xd4\xa3\x56\xba\x5f\xfd\x61\x56\xed\x46\x79\x62\xf8\x99\x7c\x51\x5f\xb5\xf4\xcb\x3c\x42\xed\x7a\x66\x5c\xad\x38\x51\xb7\xe6\xfd\xf7\x4f\x74\x5e\xc3\x17\xce\xba\x0f\x1f\x82\x3e\x46\x79\x50\xae\xe1\xc9\x8c\xcf\x5b\xc7\xa2\x71\x95\xfa\x71\x7a\x6d\x7a\xfd\x4a\xde\xd1\xe2\x3a\x78\xfe\xd0\x68\xf2\x6a\x3d\xf2\xe4\xe3\xcd\x7b\x8d\xcb\xcb\x81\x87\x5e\xbd\x3c\x6b\x34\x7d\xc9\xbe\xd7\xcf\x7d\x20\xb1\x20\x57\xf0\x79\xab\x1e\xe4\x77\x7c\xe0\x47\x43\xf6\x6d\x36\xf0\xe3\xe3\xff\xe1\x02\xed\xd7\xaf\x9b\xc0\x87\x74\xe1\xe2\xe5\x2e\x3d\xde\xfd\xed\xf2\xf4\xf8\x4d\x3e\x70\x96\x7e\xa3\x6f\x83\x7a\x16\x7a\x5f\x7c\x0d\x75\x03\x96\xa8\x91\x5a\xfe\x88\x1a\xa3\x46\xe0\x25\xab\xbd\xca\xf3\x0c\xf7\x4d\xd2\xdb\x25\x7e\xc2\x1d\xb5\x0f\x5e\xf0\x04\xf0\x37\xfd\x5c\xa5\x3e\x18\x7c\xa2\x81\xd5\xde\x3b\x44\x9f\x87\x7e\x8b\x98\x77\xc2\x5c\xd6\x39\x42\xaf\xb9\x16\xf9\x22\x6a\x13\xfe\x64\xdd\xac\xc7\xbc\xeb\xea\x79\x62\xdd\xf4\x17\xac\x89\x7b\xa9\x6d\xb4\x84\x7d\x53\x1b\xac\x09\x8e\x4b\xf2\x30\xf0\x4f\x27\x3f\x80\xd6\x51\x9b\xb3\xfa\x37\x3b\x2f\x52\xcf\x4b\xcd\x58\x1f\xab\xb9\xf1\x5a\xf4\xa7\xd4\x0e\xf1\x49\x8a\x01\xf3\x4c\x3a\x33\x81\x93\xd0\x17\xd6\x0f\x77\xa3\x43\xc6\x95\xc9\xfd\x51\x25\x9f\x69\x7e\x45\xde\x05\x6e\x82\x43\x27\xf5\xef\x51\x3e\x07\x0f\x12\x55\x07\xac\x97\x38\xc2\xfb\xac\xc5\x34\x68\xf3\x5a\xa7\xbe\xb6\x9d\x73\xa2\x9f\x55\xac\xf2\x9c\x70\xcd\xbc\xf7\x96\x3a\x77\x01\xdf\xa3\xf2\xb3\xe8\xfc\xca\x62\x5d\x79\x3f\x8b\x4f\xc3\x23\x59\xdd\xa9\x6f\x88\x7b\xfe\x47\xd7\x0f\xe3\xa4\xec\xe3\x33\x0e\x79\x23\x47\x68\x0a\xdc\x65\x3a\x2b\xed\x61\xcd\xf4\x63\x70\xf7\x28\xef\x0f\x2e\xa8\x61\x38\x1e\x9e\x18\xc4\xf7\xab\x78\xdb\xbc\xdb\xee\xfd\x66\x69\x4e\x23\x4f\x98\x3f\xe9\x65\x12\xaf\xa0\x7b\x8c\x47\x8f\x80\xee\x91\x1b\xeb\x29\x7a\xdf\xab\x79\xf4\xd5\xef\x85\xd7\x5a\xf5\xc3\xf0\x21\x7c\xc0\x7e\x0c\x97\x9b\x63\x89\x38\x8e\x3a\x13\x43\x1f\xac\xc7\xd9\x3c\xce\xc4\xb6\xd2\x99\x06\xf9\x21\xef\x3c\x4f\x8c\xa8\x1f\xea\xc6\xce\x23\x36\xf7\x3c\x68\x18\xf7\x54\x8a\x2b\xdc\x8c\xaf\x86\x87\x7b\x69\x30\x7d\x0f\x7e\x85\xda\xc1\x3f\xa2\x15\xc4\x97\x79\x76\x0c\x90\x67\x1b\xaf\xd6\x9c\xab\x7a\x71\xe1\xaa\x91\x77\xe2\x7e\xeb\xd5\xa3\xaf\xdb\xce\x4b\x36\xe7\x4b\xf3\xea\xbd\xd7\x11\x63\x0c\xc9\xf9\x97\x0f\x9e\x18\xad\xa6\xa6\xf1\x12\xec\xc5\xf6\x34\xa9\xe7\x5e\x1c\x0b\x4b\x76\xff\x67\x1e\x7b\x54\x2f\x23\x0f\x3e\x28\xc6\xfd\x2a\x4f\xb4\xb9\xa6\xb5\xca\x4d\xad\x1e\xcf\x74\x41\x75\x6e\xd8\xd1\x59\x09\x7e\x09\xfc\xb3\x1e\xbc\x94\xe5\x4e\xfa\x80\x9e\xa1\xa5\xf8\x49\xb0\xb5\xa8\x36\xf7\xf3\x05\x38\xac\x95\xaf\x24\x57\xac\x91\xf8\xd9\x7c\xab\xcf\xb3\xe8\xec\x01\x5c\x18\xd7\x27\xf7\xd2\xeb\xe2\x78\xa3\xde\x3b\xe9\x7b\x25\xff\x44\x2c\xb8\x86\x07\xc7\x87\x2c\x3a\xd7\xa3\x9e\xa9\xb5\xac\x33\x29\xfa\x54\x70\x6b\x3e\x5e\x98\xe1\x1e\xbc\x35\x75\x07\x47\x1b\x87\xa8\xb7\xa3\x17\x47\xaf\x4c\xbf\xc5\x75\xc4\x1b\xad\x33\x1f\xad\x33\xe2\x69\x3f\xcb\x90\x3f\xb7\x9e\x28\x7d\xc2\x56\xa7\x1e\x0f\x3c\xd8\xd9\xad\xfc\x0f\xf9\x62\x9c\x46\xfe\xbf\xd1\x59\x1a\x79\xa0\xae\xed\x8c\xb9\x73\xff\x4d\x7c\xd0\x7d\xe2\x4c\x7d\x81\x67\xee\x35\xbf\xba\xca\xcb\x37\x3a\x5f\xaa\xdc\xfb\xa0\x27\xe0\x97\xb9\xed\x4c\x4b\x5e\x0d\xee\x87\x6b\xe1\xfb\x51\xbe\x13\x8c\xd8\xfa\x46\xe7\x3c\xf3\x53\xaa\xb5\x4a\x9a\xbe\x9f\xef\x30\x36\xf9\x89\x3a\xab\x7e\x3d\x2f\xf9\xc0\x03\xac\xda\x8f\x9d\xef\x48\xcf\x97\xbd\x27\x6e\x75\xa6\xa1\x9e\xd1\xb8\xa0\xf6\x38\xa1\xf3\xd4\x8c\xf9\xbc\xec\xb5\x47\x0f\x66\xfe\xa9\xf7\x7e\x72\xd5\xb9\x61\x96\xee\x99\xcf\x58\xdc\xab\x25\xd5\x0b\x71\x1b\x74\xa6\x50\xeb\x1d\xc3\xba\x6b\xc2\xe8\xf7\x45\xf1\x10\x7e\x88\xba\x43\xe3\x4c\xe7\x36\xe7\xe4\x41\xfd\x1e\xf5\x6c\x67\xa6\x8b\xaf\x99\x1c\xe3\x69\x17\x3d\x43\x6f\x6c\x7d\x84\xce\xb7\xed\x3c\xbb\x71\xad\x22\x8e\xd4\x02\x35\xba\x9f\xd7\xef\x1a\xfe\xb9\xc7\xd9\xfb\xc1\xa8\x33\xb7\x79\x3f\x93\xfd\xd2\xe3\x7c\xee\x37\xfe\x7b\x9b\xf3\xf9\x08\x1f\x9d\xce\xab\x0b\xb7\x5c\xf8\x1d\xb3\xf3\xe1\xaf\xdf\x6e\x76\xec\x25\x51\xe7\x02\x65\x80\x8e\x32\xb2\x93\x0e\x94\x77\xb3\xd3\x39\x60\x00\x56\xda\x89\xbd\x76\x83\x0d\x41\x22\x3a\x96\x98\x56\x07\xa5\x8d\xfe\xdf\x7a\x53\x4a\x12\x07\x1d\x6a\x24\x1d\xa8\x4f\x32\x14\x66\x8c\x65\x86\xed\x6f\xe7\x07\x1e\x14\x38\x04\x6d\xf3\xe8\xc5\x00\xe2\xd7\x8a\x38\xac\x31\xd6\x4b\x0c\x48\x07\xc0\x01\xc8\x41\x2f\x2f\xd8\x3f\x85\x43\xc2\x21\x26\x7b\xe9\x32\x39\xc8\x99\xab\x95\xd8\xd9\x81\xb7\xcc\x1d\x09\x87\x0c\x5a\x35\xb1\x06\x9c\x45\x07\xc8\x8b\xef\xdf\x9a\xcf\xe4\x8d\x0e\x20\xa3\x48\x66\x35\x06\x18\xf2\x51\x87\xd5\xec\x6f\x3f\xc0\xa3\x60\x10\x5e\x3b\x10\xa8\xdd\x3c\x4c\x22\x04\xcc\x23\x66\x1c\xd1\xb0\x35\x4c\x3a\x98\x56\x53\x61\x04\xb9\x1f\x36\xc8\x78\xb7\xfb\xcb\xa3\xe4\xa4\xb8\x1f\xa0\xf1\x2c\x73\x65\x35\x3c\x8d\x8c\x25\x73\x43\xc2\xec\x9b\x62\x1e\x25\x54\x10\x8d\xbd\x88\x1a\xfd\x50\x19\x61\x43\x24\xfb\xde\xe3\x06\xd9\xd9\x98\x6a\x86\xcd\x28\x0c\x9f\x9a\x95\x51\x86\x8a\xb5\x91\x7f\x48\x02\xe1\x1b\x94\x27\x23\x9d\xe8\xa4\x6f\x07\x15\xab\x5e\x2a\xe8\xb0\xd3\xc8\x29\x79\xb1\x23\x08\xcc\x91\x75\xf0\x67\x2f\x09\x75\x00\xb9\xbf\x5c\xd8\x89\xc1\x84\x6a\x71\x42\x60\xdd\x10\x35\x71\x21\x9f\xf6\x37\x2b\xc6\xbd\x13\xda\x7e\x68\x05\x2e\x3b\xbd\x04\xa2\xd1\x9e\xc7\x4f\x38\x83\x90\xed\x60\x44\x42\xc0\xf5\x24\x12\xb3\x17\x2b\x3a\x84\xb4\xb5\xac\x7e\x8f\xed\x6f\x3f\x08\xec\xfd\x20\xc6\x5e\x70\x2e\x6e\x34\x36\x09\x62\xce\x9f\x8c\x0b\x79\x32\x23\xd5\x7a\x6e\x47\xbd\x50\x31\xb1\x4a\xde\x3c\xd7\x6a\xb6\xb3\x0c\xd7\xfe\x52\x02\xbc\x58\x3d\x64\x99\x8e\x5a\x8d\x69\xab\x17\x65\x3a\xf8\x02\xef\xb3\x5e\x82\x21\xd2\xdb\xbf\x03\x00\x00\xff\xff\xef\xb2\x8d\x86\x00\x20\x00\x00")

func res_res_go() ([]byte, error) {
	return bindata_read(
		_res_res_go,
		"res/res.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"res/doc/sample.txt":   res_doc_sample_txt,
	"res/doc/usage.txt":    res_doc_usage_txt,
	"res/messages_en.json": res_messages_en_json,
	"res/messages_zh.json": res_messages_zh_json,
	"res/res.go":           res_res_go,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() ([]byte, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"res/doc/sample.txt":   &_bintree_t{res_doc_sample_txt, map[string]*_bintree_t{}},
	"res/doc/usage.txt":    &_bintree_t{res_doc_usage_txt, map[string]*_bintree_t{}},
	"res/messages_en.json": &_bintree_t{res_messages_en_json, map[string]*_bintree_t{}},
	"res/messages_zh.json": &_bintree_t{res_messages_zh_json, map[string]*_bintree_t{}},
	"res/res.go":           &_bintree_t{res_res_go, map[string]*_bintree_t{}},
}}
