package res

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _res_doc_sample_txt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\x4f\x6e\xd3\x40\x14\xc6\xf7\x9c\xe2\x2d\xd8\x3a\x55\x16\xdd\x72\x09\x0e\x80\x4c\x3c\x55\x2b\xd9\x19\x2a\x8f\x25\xb7\x2b\x2b\x6a\xda\x94\x3a\x34\xa8\x7f\x84\x12\x44\x5a\x29\xa1\x61\x91\xa1\x08\x89\x3a\x1e\xbb\x1c\x26\xf3\x66\xdc\x55\xae\x80\x9c\x81\x20\x27\xec\xf0\xc2\xab\x79\xdf\xfb\xfd\xbe\x07\x00\xcf\x5f\x1c\x3a\x35\x12\x12\xb0\x7c\x50\x37\x33\xd5\xe5\xfa\xbb\xd0\x62\xa8\xce\x7b\x7a\x94\x2e\xb2\xb8\xe0\x8f\x3a\xe7\xf8\x30\xc6\xf6\x43\xf1\x75\x5a\x4c\x22\xfc\xf6\x49\x45\x77\xf3\xa8\xf5\xac\x32\xbf\x0b\x6a\x38\xd6\x1f\xcf\x64\xfe\x53\x5f\x4e\x30\xe1\xf8\xf6\xcb\xc6\xa3\x03\x70\x88\x47\xb7\x18\xf1\x59\xed\xc0\xf6\x5c\xb0\x1a\x50\xdf\x06\x6b\x67\x8f\xb8\x0e\x2c\xff\x75\xb0\xa8\x79\x45\x03\xf6\x26\x60\x35\x16\x32\xb0\x76\x80\x91\x90\x95\x61\xab\x4f\x9d\xde\x15\xb7\xb1\xba\xba\x2f\xa1\x2f\x87\xaa\xd3\xc3\xf7\xb9\x14\xa3\x79\xd4\x32\x0c\x4f\xed\xae\xce\xb9\xba\x3e\x91\xe2\x47\x75\xed\x22\x8b\xcd\x44\x7d\x7b\x15\xb1\xc8\x62\x29\xc6\xe5\x16\x75\x93\x61\x76\xae\xfb\x47\xc5\xe3\x05\x9e\xa4\xd8\xb9\x5f\xc3\x31\x91\x32\x99\x6e\xf8\x39\x86\xbc\x41\x3d\x8f\x36\x7f\x1b\xfe\x87\xb3\xbf\xef\x82\xc5\x80\xd9\xaf\x5d\xf2\xaa\x69\x7b\xa4\x52\x80\x51\xf0\xf7\xdd\x35\xe0\xf2\x6a\xb7\x13\xec\x75\x65\x92\xfe\x1d\x5d\xd5\xf2\x8f\x42\x8a\xcf\xc7\x7a\x70\xfd\x24\x3e\x14\x7c\x64\x5a\x5b\xd7\x90\xc9\x54\xf7\x8f\xf0\xb8\x8d\x7c\xb6\x61\xbd\x07\xa1\x43\x1b\xcb\xb4\xad\x43\xd2\x64\x36\xad\x2d\xc9\x29\xd0\xa0\x7a\x33\x29\xde\x99\xb6\x31\xbd\x78\xd9\xd8\x25\x9e\x8d\x9d\x01\x8a\xb4\x5c\x81\xbc\x2f\x67\xa7\x86\xae\x54\xf8\x53\x3e\x0d\x98\x1e\x70\xcc\xaf\x64\x72\x36\x8f\x5a\xbf\x02\x00\x00\xff\xff\xe2\x1d\xed\x8f\xb5\x02\x00\x00")

func res_doc_sample_txt() ([]byte, error) {
	return bindata_read(
		_res_doc_sample_txt,
		"res/doc/sample.txt",
	)
}

var _res_doc_usage_txt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x4d\x53\xda\x40\x18\xc7\xef\xfd\x14\x7b\xe9\x71\xe5\xd2\xe9\xa1\xdf\x06\x25\x14\xdb\x40\xac\x59\xeb\xcb\x29\x20\x2f\xa2\xc1\xd8\x0a\xbe\x50\x54\x70\x40\x69\x67\x92\xd0\xe9\x54\x42\x02\xf8\x61\xd8\xe7\xd9\x70\xe2\x2b\x74\x96\x58\xa1\x4e\x73\x4a\x32\xbf\xe7\xf7\xfc\xff\x3b\x4b\x08\xa1\x29\x42\x69\x4a\x51\x37\x08\xc1\x9b\x8e\x68\x1c\x81\xe7\xc0\xe1\x77\xfe\xd8\xc2\xac\x3b\x31\x72\xaf\x24\xa3\x13\x4a\x75\x85\x11\x42\x42\x67\x2c\x46\x0e\xf4\x3b\x50\xe8\x87\xae\x1d\x76\x0d\xf8\x79\x8d\xc6\xfd\xc4\xc8\x89\x6a\x17\x0f\xfa\xe0\x0e\x60\x74\x0a\xe5\x8a\xf8\xe6\xc0\xa8\x36\x6d\x18\xe1\x5d\x16\x1b\x65\x28\x5e\xe2\xd5\xfe\xf4\xf2\x44\x3a\xa5\x74\x1a\x5c\x84\x4e\x1b\x9b\x03\xac\x38\xe0\xd4\xf9\xa0\x8c\x67\x25\x1e\x3c\x88\xea\x0d\x1e\x9c\x60\xad\x87\x15\xe7\x69\xff\xfc\xa1\x09\x42\x69\x42\x49\xc6\xb7\x54\xf6\x77\x7a\x79\x6e\x01\xee\x12\x4a\x77\xe3\x69\x75\xfe\x85\x66\x09\x9c\xfa\xff\xc1\x35\x42\xe9\x9a\xb6\x95\x61\x0b\x70\x79\xbb\xa8\xe7\xf1\xaa\x85\xb5\xde\xf3\x84\x1c\xa2\xc9\x75\x45\x4d\xc8\xd7\xa8\x5b\x38\x3e\x85\x92\x2f\xea\x79\xb0\xcf\xd1\xf9\x3d\x1b\x9a\xa2\xda\x9d\x1a\xe7\x60\xf5\xe1\xa0\x38\xad\x57\x27\x46\x0e\x1b\x3f\x22\x3d\x9e\x3f\xcc\x86\x66\x14\x3e\x1a\x9c\x27\x8d\x82\x71\xcf\x96\x2b\xcb\x86\x3c\xae\xb9\xec\x9f\xfe\x1a\xa1\x54\xdb\x62\x64\xa9\x56\xa4\x78\x59\x2b\x29\x43\x6a\x9b\xe9\xf8\x9c\x7d\x62\x9a\x43\x18\x5a\xb3\xa1\x89\x55\x17\xcd\x2c\x53\x76\xd8\xc4\xc8\x7e\xd0\xb5\xcc\xc4\xc8\xee\xa4\x55\xf8\x6a\xea\x9f\xd4\xd0\xb5\xc1\xea\x3c\x27\xe4\x9e\x1f\x81\x4b\x29\x18\xa1\x94\xc5\x57\x55\xe5\xa5\x5b\xc2\xf2\x7f\x54\x51\x54\xbb\xdc\x3f\x8e\x52\xae\x67\x74\x65\x93\x45\x6e\x51\xcf\x87\xad\x2e\x9c\x54\x16\x46\xfa\x59\xd9\x5c\xd5\xf4\xb9\x10\x6e\xaf\xe1\xb0\x89\x76\x1b\xac\x1c\xd6\x7a\x32\xef\xc5\x58\xb4\xfd\xd0\xbd\x13\x41\x31\xec\xed\x87\x6e\x6d\x71\x35\xa5\x83\x7b\x3e\xf7\x8b\x78\x36\xe0\xe3\x47\x68\x74\x79\x10\x60\xde\x8a\xee\x1e\xf7\x6c\x2c\xdf\x87\x2d\xf3\xb5\x0e\x5f\x46\x3c\x68\xcf\x86\x26\x04\x7e\xe8\x38\xd0\x2b\x42\xe1\x01\x0e\x9b\x50\xe8\x88\x63\x17\x6e\xf7\xc1\xba\x98\x96\x2c\xee\xd9\x92\x29\xf4\xf9\xe8\x14\xcf\x06\xf8\xab\x06\x56\x4e\x14\xee\x79\xd0\xe1\xde\x11\x34\x7a\x70\x65\x3c\x9d\x46\x8a\xb1\x0d\xfd\x5d\x2c\xb6\xbd\xbd\xbd\xb2\xc7\x14\x9d\xad\x67\xde\xaf\x64\x14\x16\x5b\xd5\xb4\x8f\xb1\x3d\x96\xa4\x09\x6d\x2d\x16\x4f\x24\x28\xd3\xe8\x46\x9c\xa5\xe8\x9b\xb7\x2b\x29\x96\x56\xff\x04\x00\x00\xff\xff\x3a\x89\xa5\xcd\x74\x03\x00\x00")

func res_doc_usage_txt() ([]byte, error) {
	return bindata_read(
		_res_doc_usage_txt,
		"res/doc/usage.txt",
	)
}

var _res_messages_en_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x41\x6f\xdb\x3e\x0c\xc5\xef\xf9\x14\x84\x81\xa0\x97\xfc\x03\xfc\xb7\x9b\x8f\x2b\xba\x61\xc0\x2e\x6b\xb7\xd3\x3a\x08\xaa\x4c\x3b\x02\x1c\x2a\x11\xe9\x25\x41\xd1\xef\x3e\x50\xb6\xb7\x62\x88\x6c\x6f\x97\x1c\xac\x9f\xde\x23\x1f\xc5\x3c\xaf\x00\x8a\xd6\x52\xd3\xd9\x06\x8b\x12\x0a\xa4\xff\xbe\x3e\x14\x1b\xfd\xbc\x47\x66\xdb\x20\x17\x25\x7c\x5b\x01\x00\x3c\xa7\x5f\x80\xc2\x57\x8a\xd6\x21\x1a\x3c\xdb\xfd\xa1\xc5\x74\x21\x1d\x49\xb4\xc4\xad\x15\x1f\x28\xc9\x6d\x9b\x2d\xac\xb9\x48\xc7\x2f\x9b\x6b\x32\x12\xc4\xb6\x59\x81\x2f\xe9\x74\xbc\x7e\xed\xfe\x13\x36\x9e\x8c\x0b\x54\xfb\x26\x2b\xf3\x4e\x21\x90\x00\x3d\xb7\x01\xb9\x1c\x10\x6e\xf0\xec\xe5\x46\x3f\x1f\x3b\x2f\xdb\xa9\x2a\x91\x04\xa3\xf9\x95\x54\xce\xe7\x4e\x31\x90\x1d\xc2\x88\xc2\x25\x74\x70\xb2\x24\x6a\xd3\x31\x96\x8f\xf4\xff\x16\xee\xa8\x69\x3d\xef\x60\xcd\x8f\xf4\x66\x0b\xb7\x3b\x4f\xc8\x38\x93\x94\xeb\x62\x44\x92\xb9\x5e\x6f\x7b\x6c\x68\xb5\x9c\x0c\x8f\x3b\xe7\x90\xd9\x48\x30\x11\x6d\x95\xd5\x1c\x38\xed\x41\x39\xa8\x7d\x3b\x57\x6d\x6d\x7d\x3b\xea\x1a\xe5\xb3\xe2\xef\xad\x6f\xff\x54\x9e\x1c\xc6\x28\x7d\xb0\x91\x71\x99\x76\x42\xd3\x60\x5c\x20\xd1\x78\x42\xfd\x0f\x5e\xd1\x92\x6e\x44\xce\x6d\xcd\xe0\x19\x28\x08\xdc\x23\xdf\x27\x16\xea\x10\xf7\x56\x36\x20\xf1\xf2\xbb\x10\xcb\x4a\x7c\x24\x96\x57\xee\xd7\xec\x1b\x24\x8c\x56\xd0\x44\x74\x21\x56\x79\xeb\x0f\x03\x08\xeb\x0a\x06\x56\xed\x86\x16\x37\xc0\x07\xa4\x4a\x0f\x19\xdd\xb2\x8e\x5d\x20\x42\x27\x86\x8f\xad\x97\x7c\xc2\xf5\x90\x70\x38\x20\xc1\xc3\xe7\x4f\x5e\x7a\x43\x8c\x31\xc4\x72\x69\xbc\x78\x46\x67\x8e\x1d\xc6\xcb\xac\x91\xa2\x90\xd0\xbf\x9c\x5d\x38\xcd\x6a\xf7\xd3\xe9\x3b\x7e\x0b\x31\x9c\x96\x5a\xb0\xfd\x81\x06\xcf\x0e\xf3\x7f\x65\xa3\x87\xa2\x90\xd0\x12\x16\xcd\x21\xa2\x3e\x00\xb1\x4f\x13\xef\x7c\x14\xef\x61\x48\xf0\x32\x79\x4f\x8c\x51\x4c\x65\xc5\xce\xaa\xf7\x2c\x28\x3b\x23\xee\x5b\x34\x6e\xa7\x1b\x60\xc4\xef\x27\xea\xd6\xf7\xd9\x83\xa0\xa0\xee\xcf\xb2\x85\xb8\xd8\x7d\x3e\xeb\xd7\xdb\xa0\x60\xda\x03\x06\x4f\xf9\x5d\x58\x01\x7c\x5f\xbd\xfc\x0c\x00\x00\xff\xff\xe4\x6f\x10\x7d\x11\x07\x00\x00")

func res_messages_en_json() ([]byte, error) {
	return bindata_read(
		_res_messages_en_json,
		"res/messages_en.json",
	)
}

var _res_messages_zh_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\xcf\x4e\xdb\x4c\x14\xc5\xf7\x79\x8a\x91\x25\x8b\x4d\x84\xf4\x7d\x4b\xf6\x5d\x54\xea\xa6\x74\x59\x2a\x6b\x70\x6e\x82\x25\x67\x0c\x1e\xa7\x0d\x45\x48\x16\x2a\x22\x94\xa4\xa0\x26\x21\x94\x3f\x0d\xb4\x4d\x41\x95\x12\x07\x09\xd1\x10\x1c\x78\x98\x7a\x26\x93\x55\x5e\xa1\xb2\x03\x08\xaa\xd8\x89\x60\x63\xc9\xf6\xf5\xf9\xcd\xb9\xf7\x5c\x2f\xc5\x10\x92\x74\x4c\x52\x19\x9c\x02\x69\x0a\x49\xef\xe7\xa4\xb8\xff\x2c\x0d\x94\xe2\x14\x50\x69\x0a\xbd\x8e\x21\x84\xd0\x52\x70\x45\x48\xd2\x12\x7e\x5d\xd2\x30\x15\xc8\xe2\xf4\xbc\x0e\xc1\x07\xc1\x2b\xcb\xc4\x84\xea\xd8\xd2\x0c\xe2\xd7\x78\x57\x1b\xec\xe7\x0a\x92\xa9\x14\x14\x2c\xc7\x87\x09\xcd\x42\x4a\x23\x8a\x6a\x90\xa4\x96\x0a\x55\x62\xae\xcd\x8e\x37\x7a\xab\x85\x6e\xa7\x11\x47\xe2\xaa\xc8\x56\x6b\x13\x90\xd5\xac\x89\x9e\x6d\xb3\xb5\xf6\x1f\x7b\x25\x8a\x01\xc4\x02\x53\xb9\xb3\x19\x46\x11\xce\xef\x81\xb4\xd7\x39\xe4\xfb\x55\xbe\xbf\xe7\x75\xae\xbb\xa5\x93\xee\xee\x07\xe1\xd4\xc5\x89\x3d\x35\x43\xfe\x9b\x44\x62\xe3\x94\x6f\xaf\x21\x99\xce\x90\xff\x27\x91\xd7\xaa\x0f\xee\xa2\x0e\xa0\x66\x4c\x13\x88\x35\xd2\x66\xa7\xc8\xd6\x0b\x03\x9b\x7d\x77\xf7\x4e\x71\x98\x24\xcd\xa8\x2a\x50\xaa\x58\x86\x62\x02\x4e\x44\x98\xba\x64\x9b\xdb\x7c\x7b\xcd\xbb\x3c\x97\x29\xcf\x6d\xb1\x8f\xd5\x11\xed\x4a\x62\x4d\xbf\xd5\x55\x92\x5a\xc4\x84\x1f\x8a\xb3\x1f\xa7\xe2\xac\x36\xa6\xf8\x3c\x36\x29\x8c\x50\x3f\xfe\xce\xbf\x6e\x3d\x41\xdd\xc4\xc4\x8f\x70\x98\xbe\x4c\xbd\x56\x81\xef\x38\xd3\x40\xa7\x83\x4a\x7e\xe8\x32\x77\xb3\xef\xe6\x59\xf3\x40\x38\xe5\x01\xdf\x6b\xb5\xa7\x81\x3e\x27\xd4\xa2\xcc\xb9\x10\xa7\x47\xf7\x8f\x30\xec\x0c\x29\x20\x60\x62\x0b\x14\x13\x54\xc3\x4c\x84\xf3\xbb\xa5\x2a\xcf\x6d\xc9\x09\xaf\xf5\x4b\x34\x9a\xac\x53\x66\xb9\xe6\xad\xdb\xbe\x9b\x17\x76\x85\x57\xce\xe5\x44\xf7\xf8\xf3\x98\xae\x55\x83\x10\x50\x2d\x85\x2e\xe8\x9a\x15\xde\x57\xbe\x5e\x64\xae\xfd\xea\xe5\x0b\xcd\x02\x5e\x6e\xf2\x42\x83\xb5\x8b\xb7\x0d\xee\xbb\xf9\x5e\xe9\x8b\x70\x9c\xbe\xbb\x2b\xd3\x31\xc1\x90\x05\x55\x59\xc8\x80\xb9\x18\x0a\xbd\xc1\x55\x6b\xc2\xf9\x76\x47\x12\x4e\x9d\x6d\xd6\x02\xd2\xa3\xb8\x37\x63\x36\xde\x8d\xc0\x8a\xa3\xfc\x60\x98\xff\x78\x1c\x1b\x44\xf1\x5b\x50\x20\xab\x82\x1e\xfe\xb7\xbb\x3e\x60\xf5\x9d\x67\x7e\xcd\x13\x3a\xa9\x9a\xe0\x47\xc7\xc2\xb3\x11\x8b\xc1\x72\x7b\xec\xb2\x2d\x8e\x4e\x1e\x37\x34\x4d\x07\x45\x9d\xf3\x13\xaf\x58\x5a\x3a\x22\x27\x41\x16\xbd\xeb\x06\x2f\x5d\xf0\xca\x79\xaf\x72\xe6\xb5\xda\x0f\xe5\x23\xf3\xbf\x88\xd3\xe1\xed\xba\x17\x7e\xbf\xee\x86\xd5\xfe\xd4\xdd\x6b\xb0\x4e\xd9\x5f\xcd\x7a\x1c\x0d\x5d\x81\x18\x42\x6f\x62\xcb\x7f\x03\x00\x00\xff\xff\xf5\xca\x37\x06\xba\x06\x00\x00")

func res_messages_zh_json() ([]byte, error) {
	return bindata_read(
		_res_messages_zh_json,
		"res/messages_zh.json",
	)
}

var _res_res_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x99\x4b\x6f\x5c\xc7\x15\x84\xd7\x9c\x5f\x31\x21\xe0\x80\x04\x04\xf9\xbe\x1f\x06\xb4\xb1\x91\x6d\x16\xd9\xa6\x03\xe2\xde\x7e\x28\x4c\x2c\x52\x99\x21\x9d\xb6\x02\xff\xf7\xe0\x3b\xa7\x46\xa2\x65\x25\x40\x84\x2c\x28\x8a\x33\x73\xbb\xcf\xa3\x4e\x55\x75\xcf\xfb\x2d\xfe\x7d\x7b\x9b\x8f\xa7\x7c\x3e\x1c\xee\xdf\xbd\x7f\x3c\x3d\x1d\x6f\x0e\x57\xd7\xfb\xcf\x4f\xf9\x7c\x7d\xb8\xba\x8e\x8f\xef\xde\x9f\xf2\xf9\xfc\xed\xdb\x0f\xf7\xef\x79\xa1\xbc\x7b\xe2\xd7\xfd\x23\xff\x9e\x9f\x4e\xf7\x0f\x6f\xcf\xd7\x87\xdb\xc3\xa1\x3c\x3f\xc4\xe3\x7e\xff\x90\xb6\xa7\xed\xee\x94\xb7\x74\xc3\xff\x8e\x7f\xfe\x0b\x6b\xbd\x3a\x3e\x6c\xef\xf2\xd1\x3f\x7f\x7b\xbc\xb9\xbc\x9a\x4f\xa7\xc7\xd3\xed\xf1\x5f\x87\xab\xb7\x1f\xec\xaf\xe3\x77\x6f\x8e\x6c\xf5\xfa\x8f\xf9\x9f\x7f\xca\x5b\xca\xa7\x1b\x8b\x85\xbf\xbf\x7f\x2e\x25\x9f\x6c\xd9\xdb\xdb\xc3\xd5\x7d\xb1\x07\x7e\xf7\xe6\xf8\x70\xff\x23\x4b\x5c\x9d\xf2\xd3\xf3\xe9\x81\x3f\x5f\x1d\xcb\xbb\xa7\xd7\x7f\x60\xf5\x72\x73\xcd\x42\xc7\x6f\xfe\xf1\xdd\xf1\x9b\x9f\xae\x3d\x12\xdb\xeb\xf6\x70\xf5\xcb\xe1\x70\xf5\xd3\x76\x3a\xee\xcf\xe5\xe8\xfb\xf8\x26\x87\xab\x3b\x0f\xe7\xcd\xf1\xfe\xf1\xf5\x0f\x8f\xef\x7f\xbe\xf9\xfd\xfe\x5c\x5e\x1d\xdf\x7e\xb8\x25\xd6\xd7\x3f\xfc\xf8\x78\xce\x37\xb7\x87\xff\x5f\x18\x7a\x6a\x7f\x2e\xaf\xbf\x27\x92\x9b\xdb\x57\x2c\x71\xf8\xe5\x70\x20\xc2\xbb\x53\x3e\xdf\xa5\xc7\x78\x77\xde\xde\xbd\xff\x31\xdf\x3d\xd5\xa7\xe3\x1b\x55\xf7\xe6\x3a\xd4\xb6\x84\xba\xec\xa1\x36\x4b\xa8\x4d\xf3\xe5\x9f\x52\x42\xdd\x86\x50\xd7\x36\xd4\xa1\x84\x3a\xe5\x50\x53\x1f\xea\xd0\x84\xda\x0e\xa1\xc6\x29\xd4\x32\x87\xba\xc6\x50\x73\x17\x6a\x97\x42\x4d\x4b\xa8\xfd\x16\xea\x38\x86\xda\x4e\xa1\xa6\x14\xea\xdc\x85\xda\xac\xa1\x36\x39\xd4\xa5\x09\x75\x88\xa1\xf6\xd1\x3f\xd3\xed\xa1\xa6\x35\xd4\x76\x0d\xb5\xdb\x42\x5d\x4a\xa8\xdd\x18\xea\x3e\xfb\x7b\xfc\x4c\x5b\xa8\x69\x0b\x75\x1d\x7c\xed\x7e\x08\x75\x5b\x42\x9d\xc9\x61\x08\xb5\xed\x42\x1d\x86\x50\xc7\x2d\xd4\x6e\x0d\x75\x6b\x43\x9d\x5a\x8f\x9b\xff\x93\xe3\xb2\xfa\xb3\x6d\x0e\x75\xdf\x43\x6d\x63\xa8\x1d\xf1\xf7\xa1\x4e\xc4\xa9\x78\x36\xc5\x48\x4e\x4b\x1b\x6a\xd7\x84\xda\xcd\xa1\xe6\x18\x6a\x69\x42\x8d\x5d\xa8\xdb\x1e\xea\xbc\x86\x9a\x4a\xa8\x65\x0f\xb5\xa4\x50\xf7\x1c\x6a\x33\x7b\xdd\x62\x09\x75\x2c\xbe\x87\xc5\x3b\x7a\x8c\xfc\xec\x4d\xa8\x33\x7b\x35\xa1\xf6\x73\xa8\x7d\x1f\x6a\x1a\x43\xcd\x63\xa8\x65\xf3\xd8\x52\x13\xea\xd4\x79\x8e\x31\x87\x3a\xb3\x9f\xf2\xef\x88\x9f\x75\x96\x50\x73\xe3\xf5\x62\x8f\x3c\x87\x5a\xa8\x7d\xa3\xbe\x4c\xa1\x0e\x7d\xa8\xa5\x0d\x75\x1e\xbd\x36\xd4\xbd\xeb\x42\x2d\x51\xef\xaf\xa1\x0e\x63\xa8\xf3\xec\x75\x60\xbf\x42\x0d\x88\x9b\x3d\x4a\xa8\x8d\xea\xdf\x2f\xa1\xa6\xc9\x71\x43\x7e\xd3\x10\x6a\xc9\xa1\x8e\xbd\xe7\x3a\x64\xdf\x3b\xb7\x1e\x07\xeb\xc7\xdd\x63\xd9\xfa\x50\x9b\x3e\xd4\x99\x78\x97\x50\x87\xd9\xfb\xdb\x2e\x1e\xdf\xb8\x86\x9a\x53\xa8\xb1\xf1\xe7\xc6\xe8\x75\x6a\x37\xaf\x13\x75\x6e\xa6\x50\x27\x62\x99\x3d\x67\xf2\x07\x4f\x5d\x74\x9c\x92\x23\xcf\x18\x2e\x94\x17\x7b\xb2\x1e\x7d\x9e\x1a\xf5\x61\x52\x6e\xf4\x61\x52\xaf\xc1\x0a\xbf\x47\xc7\x0d\xfd\x05\xef\x2b\x78\xce\xa1\xb6\xc2\xe3\xde\x86\xba\x6f\xfe\xd3\x15\xc7\x16\xbf\x97\x39\xd4\x6d\xf3\xd9\x88\xbd\xcf\xc4\xbe\xfa\x8c\x90\xbb\x61\x65\xf0\x7d\x9b\xe8\x6b\x93\x2f\x58\xa3\xbf\x7c\x96\x35\xfb\xec\xb1\x30\x4b\xd4\x88\x9c\xf8\x1c\x3d\x63\x56\x63\x72\x9c\xcf\xc9\x31\x61\x71\xb5\xa1\xc6\xc5\xf1\x02\xf6\xa9\x77\x56\x9e\x3c\xbf\xf6\x9e\x13\xb9\xb2\x1f\x78\x65\xed\xc8\xda\xf4\x85\xcf\x64\x9f\x73\x66\x97\x58\xe8\x27\x79\xf4\x9a\x21\xe2\x5e\x57\x9f\x7f\xc3\xd8\x1a\xea\x32\x85\xba\x93\x0b\xef\x27\xe1\x70\xf2\x99\x6c\x77\xc7\x06\x75\xd9\x7b\xc7\x51\xa6\x4e\x9d\xef\x4b\xcd\x99\xf9\x8d\x39\x49\xa1\x96\xce\xeb\x37\xad\x9e\x17\xb1\x8c\x9d\x7f\x6e\x6c\x7d\xee\xa8\x29\x5c\x42\x0f\xc1\x3d\xcf\x80\x4b\xc3\x51\xef\xf3\x49\xbe\x13\xf9\x74\xbe\x7f\x9b\x7c\x7d\xe6\x8b\xcf\x13\xe3\xc0\xef\xcd\x31\x1c\x67\x9f\x2b\x70\xc9\x0c\x77\x83\xf7\x80\xbe\x31\xa3\x93\x38\x65\x64\x26\x67\xc7\x48\xa4\x3e\x83\xc7\xc3\x7a\xc4\x06\x16\x97\xe4\xcf\xec\x93\xd7\x7b\x4f\xce\x07\x60\x84\x39\xa4\x26\xcc\xc3\x0e\x26\x92\xbf\x96\x3a\xdf\x83\xba\xf1\x1a\xfc\xc9\xfa\xf4\x11\x0e\xd8\x1a\x8f\x0f\x8e\xb0\xd7\xb2\xf7\x81\x3d\x7a\xed\x31\x2f\x5e\x4b\x7a\xd7\xa9\x97\xc4\x02\x76\x9b\xd6\x73\x65\xcf\x51\x7c\x46\xcf\xc0\x2c\x73\xb4\xcd\xde\x47\x70\x61\x39\x2d\x3e\xcf\xd4\xa0\x61\x8d\xc5\xf9\x92\xfa\xc4\xe8\xfd\x22\x5e\xf8\x9c\x98\xc9\x9f\xfa\x18\x4f\x74\xbf\xd6\x0d\x7e\xc0\x31\x3d\xc8\xc2\xc7\x3e\xbe\xfc\xdc\xf5\xc5\x04\xfc\x56\xa9\x6e\xbe\x28\xf9\x17\xc5\x7b\xe9\x19\x0e\x57\x57\x5f\x50\xba\x57\x87\xab\xab\xeb\x53\x3e\x7f\x9b\x1e\xe3\xb7\xfe\xf2\xeb\xa7\xfa\x74\xfd\xea\x70\x75\xfb\x1b\x81\x7c\x3e\x6f\x6f\xbf\x5e\x1f\xa7\xe8\x78\x1b\x92\xd7\x0e\x9d\x32\x7d\x5c\x1c\x5f\xe0\x1e\x6c\x19\xa6\xf6\x50\x33\x18\x6f\x7d\x46\xe9\x7f\x96\x5e\x5d\x38\x8e\x1e\xf2\xd9\xb4\xfb\x3a\x70\xb1\xf1\xa3\xf0\x03\x0e\x4c\x93\xe0\x1f\xe6\xa9\xf5\xde\x37\x9b\x6b\x10\x7c\x49\x2f\xe9\x19\xcf\x33\x53\xf4\x9a\x18\xc1\x54\x16\x7e\x99\x03\x7a\x41\xcf\x27\xad\x81\x86\x80\x25\x9e\x35\x3d\x47\x77\xd0\x7f\x38\x79\x11\x96\xc1\x03\x1e\x60\xfb\xa4\x11\xa6\x3d\xb3\x74\x05\x1e\x20\x76\xd5\xce\x38\x72\xf5\xfd\x88\x85\xe7\x98\x69\xb4\x8f\xf7\x89\x7f\xdd\x43\x5d\x72\xa8\xd3\xe2\x9a\x09\x4e\x59\x33\x4a\x4f\x4c\x9f\xb2\xc7\x68\xfa\x1b\x7d\x0f\x66\x00\x2c\x82\xcb\x4e\x5c\xdb\x2a\x36\xb8\x60\xa1\x96\xad\xef\x6d\xfb\xcf\xae\x17\xc3\xe4\xda\x51\x06\x5f\x87\x9a\xe5\x45\x3c\x2e\xde\x80\x2f\x99\x81\x22\x3d\x61\xa6\x4c\x57\xf9\x3d\x38\xe7\xe2\x29\xe0\xa0\x96\x5c\x8a\xeb\x37\xdc\xc4\xda\xe8\x0d\xb5\xa3\x2f\xf4\x9a\x39\x64\xad\x3c\x79\x5e\xe8\x14\x33\x34\x25\xc7\x0a\x79\xc2\x55\xf0\x36\x5c\x01\x8f\x75\xcc\x63\xf6\x5e\x18\x87\x29\xe6\x22\xbf\x83\xee\x6f\xa3\xef\x63\x5a\x19\xdd\x0f\xd1\x23\xd6\xa0\xae\x68\xa0\xd5\x4b\x7e\x01\x1d\x2a\xab\x73\xcb\x12\x55\x93\xd1\xe7\x1c\x4f\x86\x3e\xe7\xcd\x73\xe7\x35\x7c\x10\xb9\xc0\x4f\xd4\x07\xcd\xa1\x37\xf4\xd2\xe6\x3c\xca\x63\xbd\xec\x71\xe7\xde\x82\x7a\xc1\xcf\xc6\x2d\x93\xf7\xd1\xf8\x56\x5a\x02\x3f\xe5\x2c\xff\xb6\xf9\xfb\x68\x92\xe9\x80\xf2\xa5\x87\xf8\x33\xd6\x27\x16\x6a\xcc\xbe\xe0\x06\x2d\x18\x34\x43\xeb\xe6\xbc\x78\xd1\x70\x7c\x0b\x38\x66\x2f\x3c\xd5\x26\x7c\xe3\x37\xd0\x1a\xd6\x85\x8f\xe0\x54\xbc\x8f\xf9\xc8\xa8\x99\xd2\xfe\x78\x08\xe6\x9a\x5e\xc3\xff\xac\x81\x16\x50\xcb\x5e\xb1\x31\x57\xcc\x62\x56\x5e\xbb\xfc\x5f\x6a\xbd\xce\x68\xa3\xf5\x62\xf3\xb5\xcd\xc7\x26\xef\x97\xd5\xb1\x71\xcf\x45\xff\xe9\x09\x6b\x53\xeb\x71\x76\xdf\x79\xc1\x2a\x6b\xf4\xc5\xbd\x00\x6b\xc2\xf3\xfc\x0d\x2f\xc3\xe1\xd4\xa8\xbd\xe8\xd7\xe6\xb5\xe2\x79\x70\x8b\xee\xc2\x39\xc4\xc5\x2c\x77\xe2\x12\x9e\xa3\xe7\x9b\x3c\x08\x1a\xba\x16\x69\xe7\xe6\x7d\x1d\xc5\x45\x93\xb4\x6a\x83\x3f\x26\xd7\x68\xb4\x07\x6e\xea\xc4\x4b\x68\x1a\xf3\xb0\x8a\xe7\xc0\x3b\x71\xe0\x57\x78\x9e\x1a\x98\x16\x2e\xd2\x8d\xde\xf7\x60\x8e\xec\xbc\x30\xbb\xc7\x61\x46\xe1\x52\x66\xd0\x66\x5e\xf3\x36\x67\xe7\x30\xfa\x46\xde\x97\xd7\xb3\xfc\x0b\x6b\x18\x9f\x6d\xde\x0f\x72\x01\xef\x1f\x9f\x69\xfd\xf5\x5e\xb5\xc9\x83\xd7\xd1\xb8\xbe\x75\xce\x22\x8f\x56\xbc\x85\xdf\xc6\xaf\xd0\x8b\x51\x1e\x9d\x79\x03\x03\xf0\x10\x73\x88\xdf\xa1\x46\xa3\x6a\x65\xfe\x3d\x7a\x6f\xe0\x34\x7c\x0c\xf5\x65\xce\x98\xd3\x49\x9e\x0c\x6c\x31\x03\xa3\xfa\x62\xdc\x93\xdc\xdf\x53\x33\xd6\x82\x0b\xe8\x3f\x98\xa7\xce\x70\x33\x33\x6e\x5c\x30\xc8\x63\x36\xbe\x0e\x1c\x08\x86\xc0\x1f\xf5\x9c\xc5\x23\xcc\x3e\xb8\xc6\xbb\xcf\xe2\x6c\x34\xc9\xf2\x5a\xdc\x1b\xc0\x69\x56\xa3\x24\xfe\x6c\x9d\x5b\xc1\x43\xd6\xdc\xb3\x07\x5c\x35\x6b\xee\xa8\xc3\xd2\xbb\xa6\x81\x39\xf3\x43\xbb\x63\x02\x5e\x83\x6b\x98\x65\xbc\x26\xbc\x4e\xee\xf3\x25\xde\xc6\xe7\x0e\x4e\xb4\xf9\xd7\xf3\x68\x29\xbd\x4f\xaa\x07\x7e\x88\xd9\x34\xdf\x90\x75\xce\x10\x66\x59\xd3\xea\x26\x7f\xdf\x0c\x8e\x0f\x78\xdc\xce\x2a\x8d\xe3\xd2\xf8\xa1\x75\xae\x61\x8d\xf5\x25\xdf\x83\x95\xde\x71\x37\x29\x86\x28\x8f\x8f\xf7\xb1\x59\x89\x1e\x23\xb5\x5f\xe5\xb1\x8b\x38\x94\x35\xec\x1c\x2c\xed\x06\x7b\x9c\x1d\xf8\x3f\x33\x32\xc8\x4b\xf2\xfc\x2c\x4f\x47\x2c\x76\xa6\x68\xfd\x1c\x7b\xf1\x9f\xe0\x82\xbc\xe0\x06\x72\x34\xdf\xd6\x4a\x83\xe4\x63\x3b\xf9\x4b\xfa\xf4\xf1\xa7\x73\x9f\xc1\x3e\x3c\x0b\x86\xc0\x5a\xca\x9f\xfc\x5a\x2b\x2c\x99\x8f\x1d\xbd\xe7\xe6\xc7\xe4\xdd\x57\xcd\x33\x1c\x3b\xc9\x87\x1a\xf6\xa4\xab\xe8\x10\x67\x1b\xf2\x25\x36\xf0\x49\xff\xf9\x9b\x7a\x7e\x3c\xab\xaf\xf2\x0a\x93\x73\x34\x3d\xf9\xdc\x13\xa2\x59\xe0\x93\xe7\x99\x75\xd3\xc8\xfe\x3f\x7a\xc2\x8f\xe6\xec\xeb\x2c\xe1\xc7\xc7\x7f\xe5\x08\xed\xd5\x2f\x1b\xc2\x77\xf9\xcc\x9b\xe7\xbb\xfc\x70\xf7\xb7\xf3\xe3\xc3\x57\x79\x42\xea\x03\x77\x30\x47\x53\x71\xfe\x34\x4f\x1d\x75\xee\x2a\x8e\x1f\xfa\x82\xee\x2c\xe2\xfe\x55\x1e\xca\xce\xad\xd1\xeb\x6a\xde\xa8\x78\x7d\xc1\x25\xda\x86\x7f\x80\x27\x26\xd5\x9e\xde\x50\x57\xf3\x5b\x3a\xe7\xe3\x6b\xf0\x77\x76\xcf\xb1\x39\xde\xe0\x64\xb4\x9e\xb8\xd0\x27\xe2\xe8\xe5\x19\x77\x69\x35\x3c\x6d\x73\x11\x3d\x76\x62\x32\x5d\x94\x36\x80\xab\xae\xd7\x3d\x80\x30\x0b\xce\xc8\x1d\xcc\xc2\x33\x70\x1e\x31\x31\x33\xcc\x02\x35\x43\xe3\xf1\x42\xe0\x8c\x1a\xe1\x55\x2f\x67\xad\xf6\x72\x87\x12\xc5\x17\x93\xd7\x0c\x9f\xdb\xca\x9f\xd8\x9d\xc9\xae\x39\x6e\xb4\xef\xec\x9c\xb0\xe8\x5e\x06\x9e\xbe\xc4\xd0\xb5\xae\x61\x7c\x2e\x69\x7d\x38\x3d\xca\x2f\xd9\xfb\xc9\x7d\x0a\xf3\x10\x75\x2e\xc3\xdf\x90\x1b\x98\x8f\x9a\x07\x7a\xc0\x4c\x50\x03\x38\x77\x90\xb7\x47\xf7\x79\x8f\x3e\xf4\xba\xdf\x61\x1d\x6a\x09\x5f\x2f\xba\x1f\x30\xcf\x3f\x78\x7e\xc6\x51\x49\x1a\xdb\x3b\x57\xda\x99\x2d\xba\x67\x31\xaf\xb4\x3b\xa7\xd1\x73\xf8\x0f\x1e\xe9\x74\x47\x61\xb9\x27\xef\x15\xb5\x30\x0d\x88\x9f\x74\x80\xf3\xa8\xf1\xf6\x28\xae\x2c\x9e\x0f\x78\xe8\x84\xc5\x4d\x77\x6d\x9c\xed\x1b\xf9\x66\xf0\x88\x77\x62\xff\x98\xdd\x9b\xd8\x9d\x8e\xf6\xa5\x56\x51\xd8\xe0\x77\xa7\x3a\xc2\x5d\x70\x10\x3c\x31\xe9\x0e\xc4\x9e\xd1\xf9\xb0\xa8\xdf\xf0\x89\xe9\xf4\xe2\xfe\x8e\x1c\xc0\x1f\x5a\x10\xd3\xa7\xcf\x9a\xd7\x13\xae\x7b\xdd\xc3\x44\x71\x3a\xba\xc9\x5c\x65\xf9\x11\x3c\x30\x9c\x6c\x77\x16\xd9\xf1\x8a\x1e\x4d\xd2\x07\x74\x83\x59\x64\xee\x16\xd5\x20\xeb\x1c\x9f\xd4\xc7\xbe\xf1\xd9\xb0\x3e\x8f\xce\x8f\xed\xc5\x2f\x27\x69\xe1\xaa\x7b\xa5\xa4\xf3\xc2\xec\x9f\x37\x3d\xd4\x6b\xf8\x8a\x56\x5e\x1f\x5f\x93\xa5\xb3\xc6\xc7\xe2\xbe\xf1\xe2\x37\xa2\x7b\xe3\x4e\x6b\xee\xba\x83\x42\x5b\x57\x69\xf7\xa0\x19\xa2\x3e\x68\x3e\xb3\xc0\xcc\xa2\xaf\xbc\x07\x9e\x39\x73\x90\x37\xaf\x53\x07\xfa\x3f\xa8\x7f\xc4\x46\x5d\xd1\x61\xbb\x5b\x5d\x9c\x1f\xf0\x26\xcc\x2f\x1a\x8b\x07\xb2\xbe\x6c\x8e\x1f\xf4\x0f\xee\x06\x93\xec\x87\x57\xc6\xe3\xd8\x7d\x69\xe3\x9e\xd1\x7c\x7a\xf4\x7e\x1b\xd7\xcf\xd2\x47\xdd\x91\x32\xcb\xbc\x07\x9e\x59\x0b\xcd\xb3\x3b\x2b\xcd\x1c\xaf\xcd\x3a\xcf\x12\xbf\x71\xff\xa2\xbf\xb7\x4f\xda\x69\xbe\x63\xd2\x7d\x9d\xce\x82\x76\x9f\x32\x78\x0c\x3c\x4b\x5e\x49\x1a\x68\x5e\x2b\x79\xdc\xd4\xa7\xd3\xdd\xc6\xa2\x1e\xc0\x63\xc4\x6d\xbe\x6d\x74\x0c\xcc\xf2\xdb\x3c\x83\xee\xc7\x5e\xb8\x57\x5d\x67\xf9\x55\x72\x01\xd3\x51\x77\x1f\xe0\xd7\x66\x59\x7a\x68\x77\x92\x3a\x37\x46\xdd\x7b\x1a\x5f\xb6\xee\xf9\x0d\x6f\x8d\x9f\x95\xcd\xdb\x25\xdf\x97\xfe\x30\x33\x45\x1c\x0e\x4f\x80\x25\x38\xa2\xd1\xf9\xd6\xb4\x64\x92\x5f\xd6\x3d\x15\xbc\x42\x9d\xcc\x77\xe8\xfc\x82\x0f\xc5\x43\x30\xcb\xe6\x25\x5f\xec\x6b\x77\xcf\x93\xbc\xb5\x62\x32\x3d\x6a\xdc\x03\x90\xaf\xdd\xa1\x15\xaf\x91\x79\x96\xe2\x5a\xc3\x8c\xc0\x29\xf0\x9b\xdd\xab\x16\xf5\xb6\x75\x9d\x61\x4f\x38\x15\xcc\x6d\xca\x05\x9f\x02\xde\x8c\x73\x7a\xc7\x87\x9d\x9b\x06\x79\xd5\x59\x67\xdc\xc6\x6b\x9a\x85\xc5\x2c\xee\x2e\xba\x87\xc0\x5f\x6e\xba\x07\x63\x0d\xf2\xb5\x5e\x8f\x7e\xe7\x96\x2e\x33\x99\x1d\x3f\x60\xd0\xf8\xed\xe2\x31\x37\xe1\x4b\x5e\x06\x8e\xa3\xf6\xf8\x5e\xb8\xd3\x34\xa5\xb8\x8f\x2a\xe2\x89\xdf\xdc\x61\x0d\x3e\xbf\xe0\x9f\xbd\xe0\x8a\xcb\x3d\xff\x67\x7e\xe5\x73\xef\xf0\xbf\x5b\x96\xcf\x57\xf8\xe8\x5a\x5e\xbc\xf1\x9a\x37\xfe\x8b\x71\xf9\xf0\xd7\xaf\x37\x2e\xf6\x65\x8f\x0c\x2d\xe4\x6f\x97\x50\x02\x04\x4d\xa6\x31\x76\x19\x22\xf1\x40\x04\x58\x97\x43\x32\x46\xa6\xe8\x72\x9a\x83\x94\x5d\xe4\x27\x27\x3d\x1a\xbb\x4d\x4e\x02\xa3\xc4\x67\xd2\x01\x1d\x40\x2c\x12\x14\x06\x89\x26\xb4\x02\x09\xe6\xd7\x0e\xe1\x8b\x03\x98\xe7\x38\x00\x13\x23\xb1\xd2\xe8\x4e\x62\x6f\x5f\x0e\x15\x7f\x06\x41\x1f\x44\xde\xab\xbe\x7c\xb1\xa6\xad\x4e\x96\x34\xb3\xd5\x00\x63\xf4\x19\x74\xd6\x41\x60\x38\xe8\x31\xfc\x98\x05\xc0\x76\x21\x28\xbb\xe0\xbf\x5c\xfa\x34\x7e\x70\xc0\x20\x90\x27\x84\x02\xb8\x18\x30\xc4\xc8\x88\x54\x17\xad\xd4\x8d\xfd\x20\x68\xf2\xa7\x9e\x18\xa4\x56\x17\x1a\x8d\x08\x05\xf2\xc3\x8c\x64\x5d\xa8\x91\x1f\x20\xa7\x2f\x0c\x94\x5d\xc8\x0e\xba\x54\x1d\xdc\xb4\x5d\x9e\x03\xc0\x8b\x4c\xc2\xa2\x03\x2f\x7b\xd8\x25\xa0\xea\x97\x64\x50\x66\x11\x25\x7f\x9b\xf8\x8d\x3a\x44\x77\x3a\x54\x46\x27\x95\x28\xa0\xf3\xfb\x72\x61\x10\x65\x58\xb3\x6a\x91\xf4\x85\x86\x5d\x50\xcd\xba\x10\xd0\x70\x9b\x09\x99\x3d\x3e\x72\xdf\x64\x78\xf9\x21\x1f\x0c\xd4\xa2\x9e\xd8\x17\x1b\xba\x04\x82\x30\xc0\x97\x5d\x24\x34\xc2\xe4\xe4\xeb\xd0\x9b\x49\x07\xea\xa8\x9c\x7b\x5d\x2a\x71\xf0\x5a\xc6\x17\x04\xd3\xba\x99\xcc\xfa\x72\x81\x1c\x47\x7d\x89\x04\xd9\x19\x39\xea\xcb\x2e\x7a\xba\x4a\x34\x77\x1d\x38\x8b\xbe\xec\xc2\x50\x74\xba\xc0\x6b\x24\x02\xf4\x6c\xec\xf5\xc5\x4d\xef\xbd\x44\x08\xd8\xd3\xcc\x93\x2e\x14\xc0\x21\x75\xc1\x40\x64\x19\x3b\x72\xc0\xfc\x5e\x2e\x4e\x67\x7d\xe9\x68\x97\x54\xba\x1c\x80\xec\xb2\xbe\x50\xb4\x03\xa3\xe6\x6f\x91\x71\xb2\x8b\xaf\xde\x4d\x24\x06\x14\x81\xa5\x2e\x59\x06\x09\xc2\xb2\x4b\x51\x19\x0a\x62\x5a\x35\xe3\x10\x2d\xb3\x9b\xf4\xa5\x15\x42\x6a\xc6\xac\xf3\xbe\x1b\x79\x4e\x9a\xfb\xde\x0d\x5f\xaf\xcb\xea\xe9\xdf\x01\x00\x00\xff\xff\x69\x3a\x5e\xea\x00\x20\x00\x00")

func res_res_go() ([]byte, error) {
	return bindata_read(
		_res_res_go,
		"res/res.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"res/doc/sample.txt": res_doc_sample_txt,
	"res/doc/usage.txt": res_doc_usage_txt,
	"res/messages_en.json": res_messages_en_json,
	"res/messages_zh.json": res_messages_zh_json,
	"res/res.go": res_res_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"res": &_bintree_t{nil, map[string]*_bintree_t{
		"doc": &_bintree_t{nil, map[string]*_bintree_t{
			"sample.txt": &_bintree_t{res_doc_sample_txt, map[string]*_bintree_t{
			}},
			"usage.txt": &_bintree_t{res_doc_usage_txt, map[string]*_bintree_t{
			}},
		}},
		"messages_en.json": &_bintree_t{res_messages_en_json, map[string]*_bintree_t{
		}},
		"messages_zh.json": &_bintree_t{res_messages_zh_json, map[string]*_bintree_t{
		}},
		"res.go": &_bintree_t{res_res_go, map[string]*_bintree_t{
		}},
	}},
}}
